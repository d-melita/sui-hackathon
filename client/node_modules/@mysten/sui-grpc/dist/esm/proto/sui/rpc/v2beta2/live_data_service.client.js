import { LiveDataService } from "./live_data_service.js";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
class LiveDataServiceClient {
  constructor(_transport) {
    this._transport = _transport;
    this.typeName = LiveDataService.typeName;
    this.methods = LiveDataService.methods;
    this.options = LiveDataService.options;
  }
  /**
   * @generated from protobuf rpc: ListDynamicFields
   */
  listDynamicFields(input, options) {
    const method = this.methods[0], opt = this._transport.mergeOptions(options);
    return stackIntercept(
      "unary",
      this._transport,
      method,
      opt,
      input
    );
  }
  /**
   * @generated from protobuf rpc: ListOwnedObjects
   */
  listOwnedObjects(input, options) {
    const method = this.methods[1], opt = this._transport.mergeOptions(options);
    return stackIntercept(
      "unary",
      this._transport,
      method,
      opt,
      input
    );
  }
  /**
   * @generated from protobuf rpc: GetCoinInfo
   */
  getCoinInfo(input, options) {
    const method = this.methods[2], opt = this._transport.mergeOptions(options);
    return stackIntercept(
      "unary",
      this._transport,
      method,
      opt,
      input
    );
  }
  /**
   * @generated from protobuf rpc: GetBalance
   */
  getBalance(input, options) {
    const method = this.methods[3], opt = this._transport.mergeOptions(options);
    return stackIntercept(
      "unary",
      this._transport,
      method,
      opt,
      input
    );
  }
  /**
   * @generated from protobuf rpc: ListBalances
   */
  listBalances(input, options) {
    const method = this.methods[4], opt = this._transport.mergeOptions(options);
    return stackIntercept(
      "unary",
      this._transport,
      method,
      opt,
      input
    );
  }
  /**
   * @generated from protobuf rpc: SimulateTransaction
   */
  simulateTransaction(input, options) {
    const method = this.methods[5], opt = this._transport.mergeOptions(options);
    return stackIntercept(
      "unary",
      this._transport,
      method,
      opt,
      input
    );
  }
}
export {
  LiveDataServiceClient
};
//# sourceMappingURL=live_data_service.client.js.map
