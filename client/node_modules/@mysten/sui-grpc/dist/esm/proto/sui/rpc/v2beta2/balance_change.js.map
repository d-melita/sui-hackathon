{
  "version": 3,
  "sources": ["../../../../../../src/proto/sui/rpc/v2beta2/balance_change.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\nimport type { BinaryWriteOptions } from '@protobuf-ts/runtime';\nimport type { IBinaryWriter } from '@protobuf-ts/runtime';\nimport { WireType } from '@protobuf-ts/runtime';\nimport type { BinaryReadOptions } from '@protobuf-ts/runtime';\nimport type { IBinaryReader } from '@protobuf-ts/runtime';\nimport { UnknownFieldHandler } from '@protobuf-ts/runtime';\nimport type { PartialMessage } from '@protobuf-ts/runtime';\nimport { reflectionMergePartial } from '@protobuf-ts/runtime';\nimport { MessageType } from '@protobuf-ts/runtime';\n/**\n * The delta, or change, in balance for an address for a particular `Coin` type.\n *\n * @generated from protobuf message sui.rpc.v2beta2.BalanceChange\n */\nexport interface BalanceChange {\n\t/**\n\t * The account address that is affected by this balance change event.\n\t *\n\t * @generated from protobuf field: optional string address = 1\n\t */\n\taddress?: string;\n\t/**\n\t * The `Coin` type of this balance change event.\n\t *\n\t * @generated from protobuf field: optional string coin_type = 2\n\t */\n\tcoinType?: string;\n\t/**\n\t * The amount or change in balance.\n\t *\n\t * @generated from protobuf field: optional string amount = 3\n\t */\n\tamount?: string;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass BalanceChange$Type extends MessageType<BalanceChange> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2beta2.BalanceChange', [\n\t\t\t{ no: 1, name: 'address', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'coin_type', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 3, name: 'amount', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t]);\n\t}\n\tcreate(value?: PartialMessage<BalanceChange>): BalanceChange {\n\t\tconst message = globalThis.Object.create(this.messagePrototype!);\n\t\tif (value !== undefined) reflectionMergePartial<BalanceChange>(this, message, value);\n\t\treturn message;\n\t}\n\tinternalBinaryRead(\n\t\treader: IBinaryReader,\n\t\tlength: number,\n\t\toptions: BinaryReadOptions,\n\t\ttarget?: BalanceChange,\n\t): BalanceChange {\n\t\tlet message = target ?? this.create(),\n\t\t\tend = reader.pos + length;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tcase /* optional string address */ 1:\n\t\t\t\t\tmessage.address = reader.string();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional string coin_type */ 2:\n\t\t\t\t\tmessage.coinType = reader.string();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional string amount */ 3:\n\t\t\t\t\tmessage.amount = reader.string();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet u = options.readUnknownField;\n\t\t\t\t\tif (u === 'throw')\n\t\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t\t`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,\n\t\t\t\t\t\t);\n\t\t\t\t\tlet d = reader.skip(wireType);\n\t\t\t\t\tif (u !== false)\n\t\t\t\t\t\t(u === true ? UnknownFieldHandler.onRead : u)(\n\t\t\t\t\t\t\tthis.typeName,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tfieldNo,\n\t\t\t\t\t\t\twireType,\n\t\t\t\t\t\t\td,\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\tinternalBinaryWrite(\n\t\tmessage: BalanceChange,\n\t\twriter: IBinaryWriter,\n\t\toptions: BinaryWriteOptions,\n\t): IBinaryWriter {\n\t\t/* optional string address = 1; */\n\t\tif (message.address !== undefined)\n\t\t\twriter.tag(1, WireType.LengthDelimited).string(message.address);\n\t\t/* optional string coin_type = 2; */\n\t\tif (message.coinType !== undefined)\n\t\t\twriter.tag(2, WireType.LengthDelimited).string(message.coinType);\n\t\t/* optional string amount = 3; */\n\t\tif (message.amount !== undefined)\n\t\t\twriter.tag(3, WireType.LengthDelimited).string(message.amount);\n\t\tlet u = options.writeUnknownFields;\n\t\tif (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n\t\treturn writer;\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2beta2.BalanceChange\n */\nexport const BalanceChange = new BalanceChange$Type();\n"],
  "mappings": "AAIA,SAAS,gBAAgB;AAGzB,SAAS,2BAA2B;AAEpC,SAAS,8BAA8B;AACvC,SAAS,mBAAmB;AA2B5B,MAAM,2BAA2B,YAA2B;AAAA,EAC3D,cAAc;AACb,UAAM,iCAAiC;AAAA,MACtC;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAW,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAChF;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAa,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAClF;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAU,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,IAChF,CAAC;AAAA,EACF;AAAA,EACA,OAAO,OAAsD;AAC5D,UAAM,UAAU,WAAW,OAAO,OAAO,KAAK,gBAAiB;AAC/D,QAAI,UAAU,OAAW,wBAAsC,MAAM,SAAS,KAAK;AACnF,WAAO;AAAA,EACR;AAAA,EACA,mBACC,QACA,QACA,SACA,QACgB;AAChB,QAAI,UAAU,UAAU,KAAK,OAAO,GACnC,MAAM,OAAO,MAAM;AACpB,WAAO,OAAO,MAAM,KAAK;AACxB,UAAI,CAAC,SAAS,QAAQ,IAAI,OAAO,IAAI;AACrC,cAAQ,SAAS;AAAA,QAChB;AAAA,QAAmC;AAClC,kBAAQ,UAAU,OAAO,OAAO;AAChC;AAAA,QACD;AAAA,QAAqC;AACpC,kBAAQ,WAAW,OAAO,OAAO;AACjC;AAAA,QACD;AAAA,QAAkC;AACjC,kBAAQ,SAAS,OAAO,OAAO;AAC/B;AAAA,QACD;AACC,cAAI,IAAI,QAAQ;AAChB,cAAI,MAAM;AACT,kBAAM,IAAI,WAAW;AAAA,cACpB,iBAAiB,OAAO,eAAe,QAAQ,SAAS,KAAK,QAAQ;AAAA,YACtE;AACD,cAAI,IAAI,OAAO,KAAK,QAAQ;AAC5B,cAAI,MAAM;AACT,aAAC,MAAM,OAAO,oBAAoB,SAAS;AAAA,cAC1C,KAAK;AAAA,cACL;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACD;AAAA,MACH;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EACA,oBACC,SACA,QACA,SACgB;AAEhB,QAAI,QAAQ,YAAY;AACvB,aAAO,IAAI,GAAG,SAAS,eAAe,EAAE,OAAO,QAAQ,OAAO;AAE/D,QAAI,QAAQ,aAAa;AACxB,aAAO,IAAI,GAAG,SAAS,eAAe,EAAE,OAAO,QAAQ,QAAQ;AAEhE,QAAI,QAAQ,WAAW;AACtB,aAAO,IAAI,GAAG,SAAS,eAAe,EAAE,OAAO,QAAQ,MAAM;AAC9D,QAAI,IAAI,QAAQ;AAChB,QAAI,MAAM,MAAO,EAAC,KAAK,OAAO,oBAAoB,UAAU,GAAG,KAAK,UAAU,SAAS,MAAM;AAC7F,WAAO;AAAA,EACR;AACD;AAIO,MAAM,gBAAgB,IAAI,mBAAmB;",
  "names": []
}
