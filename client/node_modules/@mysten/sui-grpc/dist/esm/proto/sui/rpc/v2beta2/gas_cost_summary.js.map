{
  "version": 3,
  "sources": ["../../../../../../src/proto/sui/rpc/v2beta2/gas_cost_summary.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\nimport type { BinaryWriteOptions } from '@protobuf-ts/runtime';\nimport type { IBinaryWriter } from '@protobuf-ts/runtime';\nimport { WireType } from '@protobuf-ts/runtime';\nimport type { BinaryReadOptions } from '@protobuf-ts/runtime';\nimport type { IBinaryReader } from '@protobuf-ts/runtime';\nimport { UnknownFieldHandler } from '@protobuf-ts/runtime';\nimport type { PartialMessage } from '@protobuf-ts/runtime';\nimport { reflectionMergePartial } from '@protobuf-ts/runtime';\nimport { MessageType } from '@protobuf-ts/runtime';\n/**\n * Summary of gas charges.\n *\n * @generated from protobuf message sui.rpc.v2beta2.GasCostSummary\n */\nexport interface GasCostSummary {\n\t/**\n\t * Cost of computation/execution.\n\t *\n\t * @generated from protobuf field: optional uint64 computation_cost = 1\n\t */\n\tcomputationCost?: bigint;\n\t/**\n\t * Storage cost, it's the sum of all storage cost for all objects created or mutated.\n\t *\n\t * @generated from protobuf field: optional uint64 storage_cost = 2\n\t */\n\tstorageCost?: bigint;\n\t/**\n\t * The amount of storage cost refunded to the user for all objects deleted or mutated in the\n\t * transaction.\n\t *\n\t * @generated from protobuf field: optional uint64 storage_rebate = 3\n\t */\n\tstorageRebate?: bigint;\n\t/**\n\t * The fee for the rebate. The portion of the storage rebate kept by the system.\n\t *\n\t * @generated from protobuf field: optional uint64 non_refundable_storage_fee = 4\n\t */\n\tnonRefundableStorageFee?: bigint;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass GasCostSummary$Type extends MessageType<GasCostSummary> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2beta2.GasCostSummary', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'computation_cost',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'storage_cost',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'storage_rebate',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 4,\n\t\t\t\tname: 'non_refundable_storage_fee',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t]);\n\t}\n\tcreate(value?: PartialMessage<GasCostSummary>): GasCostSummary {\n\t\tconst message = globalThis.Object.create(this.messagePrototype!);\n\t\tif (value !== undefined) reflectionMergePartial<GasCostSummary>(this, message, value);\n\t\treturn message;\n\t}\n\tinternalBinaryRead(\n\t\treader: IBinaryReader,\n\t\tlength: number,\n\t\toptions: BinaryReadOptions,\n\t\ttarget?: GasCostSummary,\n\t): GasCostSummary {\n\t\tlet message = target ?? this.create(),\n\t\t\tend = reader.pos + length;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tcase /* optional uint64 computation_cost */ 1:\n\t\t\t\t\tmessage.computationCost = reader.uint64().toBigInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional uint64 storage_cost */ 2:\n\t\t\t\t\tmessage.storageCost = reader.uint64().toBigInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional uint64 storage_rebate */ 3:\n\t\t\t\t\tmessage.storageRebate = reader.uint64().toBigInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional uint64 non_refundable_storage_fee */ 4:\n\t\t\t\t\tmessage.nonRefundableStorageFee = reader.uint64().toBigInt();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet u = options.readUnknownField;\n\t\t\t\t\tif (u === 'throw')\n\t\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t\t`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,\n\t\t\t\t\t\t);\n\t\t\t\t\tlet d = reader.skip(wireType);\n\t\t\t\t\tif (u !== false)\n\t\t\t\t\t\t(u === true ? UnknownFieldHandler.onRead : u)(\n\t\t\t\t\t\t\tthis.typeName,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tfieldNo,\n\t\t\t\t\t\t\twireType,\n\t\t\t\t\t\t\td,\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\tinternalBinaryWrite(\n\t\tmessage: GasCostSummary,\n\t\twriter: IBinaryWriter,\n\t\toptions: BinaryWriteOptions,\n\t): IBinaryWriter {\n\t\t/* optional uint64 computation_cost = 1; */\n\t\tif (message.computationCost !== undefined)\n\t\t\twriter.tag(1, WireType.Varint).uint64(message.computationCost);\n\t\t/* optional uint64 storage_cost = 2; */\n\t\tif (message.storageCost !== undefined)\n\t\t\twriter.tag(2, WireType.Varint).uint64(message.storageCost);\n\t\t/* optional uint64 storage_rebate = 3; */\n\t\tif (message.storageRebate !== undefined)\n\t\t\twriter.tag(3, WireType.Varint).uint64(message.storageRebate);\n\t\t/* optional uint64 non_refundable_storage_fee = 4; */\n\t\tif (message.nonRefundableStorageFee !== undefined)\n\t\t\twriter.tag(4, WireType.Varint).uint64(message.nonRefundableStorageFee);\n\t\tlet u = options.writeUnknownFields;\n\t\tif (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n\t\treturn writer;\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2beta2.GasCostSummary\n */\nexport const GasCostSummary = new GasCostSummary$Type();\n"],
  "mappings": "AAIA,SAAS,gBAAgB;AAGzB,SAAS,2BAA2B;AAEpC,SAAS,8BAA8B;AACvC,SAAS,mBAAmB;AAkC5B,MAAM,4BAA4B,YAA4B;AAAA,EAC7D,cAAc;AACb,UAAM,kCAAkC;AAAA,MACvC;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,KAAK;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,MACJ;AAAA,MACA;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,KAAK;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,MACJ;AAAA,MACA;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,KAAK;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,MACJ;AAAA,MACA;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,KAAK;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,MACJ;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EACA,OAAO,OAAwD;AAC9D,UAAM,UAAU,WAAW,OAAO,OAAO,KAAK,gBAAiB;AAC/D,QAAI,UAAU,OAAW,wBAAuC,MAAM,SAAS,KAAK;AACpF,WAAO;AAAA,EACR;AAAA,EACA,mBACC,QACA,QACA,SACA,QACiB;AACjB,QAAI,UAAU,UAAU,KAAK,OAAO,GACnC,MAAM,OAAO,MAAM;AACpB,WAAO,OAAO,MAAM,KAAK;AACxB,UAAI,CAAC,SAAS,QAAQ,IAAI,OAAO,IAAI;AACrC,cAAQ,SAAS;AAAA,QAChB;AAAA,QAA4C;AAC3C,kBAAQ,kBAAkB,OAAO,OAAO,EAAE,SAAS;AACnD;AAAA,QACD;AAAA,QAAwC;AACvC,kBAAQ,cAAc,OAAO,OAAO,EAAE,SAAS;AAC/C;AAAA,QACD;AAAA,QAA0C;AACzC,kBAAQ,gBAAgB,OAAO,OAAO,EAAE,SAAS;AACjD;AAAA,QACD;AAAA,QAAsD;AACrD,kBAAQ,0BAA0B,OAAO,OAAO,EAAE,SAAS;AAC3D;AAAA,QACD;AACC,cAAI,IAAI,QAAQ;AAChB,cAAI,MAAM;AACT,kBAAM,IAAI,WAAW;AAAA,cACpB,iBAAiB,OAAO,eAAe,QAAQ,SAAS,KAAK,QAAQ;AAAA,YACtE;AACD,cAAI,IAAI,OAAO,KAAK,QAAQ;AAC5B,cAAI,MAAM;AACT,aAAC,MAAM,OAAO,oBAAoB,SAAS;AAAA,cAC1C,KAAK;AAAA,cACL;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACD;AAAA,MACH;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EACA,oBACC,SACA,QACA,SACgB;AAEhB,QAAI,QAAQ,oBAAoB;AAC/B,aAAO,IAAI,GAAG,SAAS,MAAM,EAAE,OAAO,QAAQ,eAAe;AAE9D,QAAI,QAAQ,gBAAgB;AAC3B,aAAO,IAAI,GAAG,SAAS,MAAM,EAAE,OAAO,QAAQ,WAAW;AAE1D,QAAI,QAAQ,kBAAkB;AAC7B,aAAO,IAAI,GAAG,SAAS,MAAM,EAAE,OAAO,QAAQ,aAAa;AAE5D,QAAI,QAAQ,4BAA4B;AACvC,aAAO,IAAI,GAAG,SAAS,MAAM,EAAE,OAAO,QAAQ,uBAAuB;AACtE,QAAI,IAAI,QAAQ;AAChB,QAAI,MAAM,MAAO,EAAC,KAAK,OAAO,oBAAoB,UAAU,GAAG,KAAK,UAAU,SAAS,MAAM;AAC7F,WAAO;AAAA,EACR;AACD;AAIO,MAAM,iBAAiB,IAAI,oBAAoB;",
  "names": []
}
