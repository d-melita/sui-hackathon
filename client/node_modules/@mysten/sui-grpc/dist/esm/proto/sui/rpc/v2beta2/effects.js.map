{
  "version": 3,
  "sources": ["../../../../../../src/proto/sui/rpc/v2beta2/effects.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\nimport type { BinaryWriteOptions } from '@protobuf-ts/runtime';\nimport type { IBinaryWriter } from '@protobuf-ts/runtime';\nimport { WireType } from '@protobuf-ts/runtime';\nimport type { BinaryReadOptions } from '@protobuf-ts/runtime';\nimport type { IBinaryReader } from '@protobuf-ts/runtime';\nimport { UnknownFieldHandler } from '@protobuf-ts/runtime';\nimport type { PartialMessage } from '@protobuf-ts/runtime';\nimport { reflectionMergePartial } from '@protobuf-ts/runtime';\nimport { MessageType } from '@protobuf-ts/runtime';\nimport { Owner } from './owner.js';\nimport { GasCostSummary } from './gas_cost_summary.js';\nimport { ExecutionStatus } from './execution_status.js';\nimport { Bcs } from './bcs.js';\n/**\n * The effects of executing a transaction.\n *\n * @generated from protobuf message sui.rpc.v2beta2.TransactionEffects\n */\nexport interface TransactionEffects {\n\t/**\n\t * This TransactionEffects serialized as BCS.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2beta2.Bcs bcs = 1\n\t */\n\tbcs?: Bcs;\n\t/**\n\t * The digest of this TransactionEffects.\n\t *\n\t * @generated from protobuf field: optional string digest = 2\n\t */\n\tdigest?: string;\n\t/**\n\t * Version of this TransactionEffects.\n\t *\n\t * @generated from protobuf field: optional int32 version = 3\n\t */\n\tversion?: number;\n\t/**\n\t * The status of the execution.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2beta2.ExecutionStatus status = 4\n\t */\n\tstatus?: ExecutionStatus;\n\t/**\n\t * The epoch when this transaction was executed.\n\t *\n\t * @generated from protobuf field: optional uint64 epoch = 5\n\t */\n\tepoch?: bigint;\n\t/**\n\t * The gas used by this transaction.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2beta2.GasCostSummary gas_used = 6\n\t */\n\tgasUsed?: GasCostSummary;\n\t/**\n\t * The transaction digest.\n\t *\n\t * @generated from protobuf field: optional string transaction_digest = 7\n\t */\n\ttransactionDigest?: string;\n\t/**\n\t * Information about the gas object. Also present in the `changed_objects` vector.\n\t *\n\t * System transaction that don't require gas will leave this as `None`.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2beta2.ChangedObject gas_object = 8\n\t */\n\tgasObject?: ChangedObject;\n\t/**\n\t * The digest of the events emitted during execution,\n\t * can be `None` if the transaction does not emit any event.\n\t *\n\t * @generated from protobuf field: optional string events_digest = 9\n\t */\n\teventsDigest?: string;\n\t/**\n\t * The set of transaction digests this transaction depends on.\n\t *\n\t * @generated from protobuf field: repeated string dependencies = 10\n\t */\n\tdependencies: string[];\n\t/**\n\t * The version number of all the written objects (excluding packages) by this transaction.\n\t *\n\t * @generated from protobuf field: optional uint64 lamport_version = 11\n\t */\n\tlamportVersion?: bigint;\n\t/**\n\t * Objects whose state are changed by this transaction.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2beta2.ChangedObject changed_objects = 12\n\t */\n\tchangedObjects: ChangedObject[];\n\t/**\n\t * Shared objects that are not mutated in this transaction. Unlike owned objects,\n\t * read-only shared objects' version are not committed in the transaction,\n\t * and in order for a node to catch up and execute it without consensus sequencing,\n\t * the version needs to be committed in the effects.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2beta2.UnchangedSharedObject unchanged_shared_objects = 13\n\t */\n\tunchangedSharedObjects: UnchangedSharedObject[];\n\t/**\n\t * Auxiliary data that are not protocol-critical, generated as part of the effects but are stored separately.\n\t * Storing it separately allows us to avoid bloating the effects with data that are not critical.\n\t * It also provides more flexibility on the format and type of the data.\n\t *\n\t * @generated from protobuf field: optional string auxiliary_data_digest = 14\n\t */\n\tauxiliaryDataDigest?: string;\n}\n/**\n * Input/output state of an object that was changed during execution.\n *\n * @generated from protobuf message sui.rpc.v2beta2.ChangedObject\n */\nexport interface ChangedObject {\n\t/**\n\t * ID of the object.\n\t *\n\t * @generated from protobuf field: optional string object_id = 1\n\t */\n\tobjectId?: string;\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2beta2.ChangedObject.InputObjectState input_state = 2\n\t */\n\tinputState?: ChangedObject_InputObjectState;\n\t/**\n\t * Version of the object before this transaction executed.\n\t *\n\t * @generated from protobuf field: optional uint64 input_version = 3\n\t */\n\tinputVersion?: bigint;\n\t/**\n\t * Digest of the object before this transaction executed.\n\t *\n\t * @generated from protobuf field: optional string input_digest = 4\n\t */\n\tinputDigest?: string;\n\t/**\n\t * Owner of the object before this transaction executed.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2beta2.Owner input_owner = 5\n\t */\n\tinputOwner?: Owner;\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2beta2.ChangedObject.OutputObjectState output_state = 6\n\t */\n\toutputState?: ChangedObject_OutputObjectState;\n\t/**\n\t * Version of the object after this transaction executed.\n\t *\n\t * @generated from protobuf field: optional uint64 output_version = 7\n\t */\n\toutputVersion?: bigint;\n\t/**\n\t * Digest of the object after this transaction executed.\n\t *\n\t * @generated from protobuf field: optional string output_digest = 8\n\t */\n\toutputDigest?: string;\n\t/**\n\t * Owner of the object after this transaction executed.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2beta2.Owner output_owner = 9\n\t */\n\toutputOwner?: Owner;\n\t/**\n\t * What happened to an `ObjectId` during execution.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2beta2.ChangedObject.IdOperation id_operation = 10\n\t */\n\tidOperation?: ChangedObject_IdOperation;\n\t/**\n\t * Type information is not provided by the effects structure but is instead\n\t * provided by an indexing layer\n\t *\n\t * @generated from protobuf field: optional string object_type = 11\n\t */\n\tobjectType?: string;\n}\n/**\n * @generated from protobuf enum sui.rpc.v2beta2.ChangedObject.InputObjectState\n */\nexport enum ChangedObject_InputObjectState {\n\t/**\n\t * @generated from protobuf enum value: INPUT_OBJECT_STATE_UNKNOWN = 0;\n\t */\n\tUNKNOWN = 0,\n\t/**\n\t * @generated from protobuf enum value: INPUT_OBJECT_STATE_DOES_NOT_EXIST = 1;\n\t */\n\tDOES_NOT_EXIST = 1,\n\t/**\n\t * @generated from protobuf enum value: INPUT_OBJECT_STATE_EXISTS = 2;\n\t */\n\tEXISTS = 2,\n}\n/**\n * @generated from protobuf enum sui.rpc.v2beta2.ChangedObject.OutputObjectState\n */\nexport enum ChangedObject_OutputObjectState {\n\t/**\n\t * @generated from protobuf enum value: OUTPUT_OBJECT_STATE_UNKNOWN = 0;\n\t */\n\tUNKNOWN = 0,\n\t/**\n\t * @generated from protobuf enum value: OUTPUT_OBJECT_STATE_DOES_NOT_EXIST = 1;\n\t */\n\tDOES_NOT_EXIST = 1,\n\t/**\n\t * @generated from protobuf enum value: OUTPUT_OBJECT_STATE_OBJECT_WRITE = 2;\n\t */\n\tOBJECT_WRITE = 2,\n\t/**\n\t * @generated from protobuf enum value: OUTPUT_OBJECT_STATE_PACKAGE_WRITE = 3;\n\t */\n\tPACKAGE_WRITE = 3,\n}\n/**\n * @generated from protobuf enum sui.rpc.v2beta2.ChangedObject.IdOperation\n */\nexport enum ChangedObject_IdOperation {\n\t/**\n\t * @generated from protobuf enum value: ID_OPERATION_UNKNOWN = 0;\n\t */\n\tID_OPERATION_UNKNOWN = 0,\n\t/**\n\t * @generated from protobuf enum value: NONE = 1;\n\t */\n\tNONE = 1,\n\t/**\n\t * @generated from protobuf enum value: CREATED = 2;\n\t */\n\tCREATED = 2,\n\t/**\n\t * @generated from protobuf enum value: DELETED = 3;\n\t */\n\tDELETED = 3,\n}\n/**\n * A shared object that wasn't changed during execution.\n *\n * @generated from protobuf message sui.rpc.v2beta2.UnchangedSharedObject\n */\nexport interface UnchangedSharedObject {\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2beta2.UnchangedSharedObject.UnchangedSharedObjectKind kind = 1\n\t */\n\tkind?: UnchangedSharedObject_UnchangedSharedObjectKind;\n\t/**\n\t * ObjectId of the shared object.\n\t *\n\t * @generated from protobuf field: optional string object_id = 2\n\t */\n\tobjectId?: string;\n\t/**\n\t * Version of the shared object.\n\t *\n\t * @generated from protobuf field: optional uint64 version = 3\n\t */\n\tversion?: bigint;\n\t/**\n\t * Digest of the shared object.\n\t *\n\t * @generated from protobuf field: optional string digest = 4\n\t */\n\tdigest?: string;\n\t/**\n\t * Type information is not provided by the effects structure but is instead\n\t * provided by an indexing layer\n\t *\n\t * @generated from protobuf field: optional string object_type = 5\n\t */\n\tobjectType?: string;\n}\n/**\n * @generated from protobuf enum sui.rpc.v2beta2.UnchangedSharedObject.UnchangedSharedObjectKind\n */\nexport enum UnchangedSharedObject_UnchangedSharedObjectKind {\n\t/**\n\t * @generated from protobuf enum value: UNCHANGED_SHARED_OBJECT_KIND_UNKNOWN = 0;\n\t */\n\tUNCHANGED_SHARED_OBJECT_KIND_UNKNOWN = 0,\n\t/**\n\t * Read-only shared object from the input.\n\t *\n\t * @generated from protobuf enum value: READ_ONLY_ROOT = 1;\n\t */\n\tREAD_ONLY_ROOT = 1,\n\t/**\n\t * Objects with ended consensus streams that appear mutably/owned in the input.\n\t *\n\t * @generated from protobuf enum value: MUTATE_CONSENSUS_STREAM_ENDED = 2;\n\t */\n\tMUTATE_CONSENSUS_STREAM_ENDED = 2,\n\t/**\n\t * Objects with ended consensus streams objects that appear as read-only in the input.\n\t *\n\t * @generated from protobuf enum value: READ_CONSENSUS_STREAM_ENDED = 3;\n\t */\n\tREAD_CONSENSUS_STREAM_ENDED = 3,\n\t/**\n\t * Consensus objects that were congested and resulted in this transaction being\n\t * canceled.\n\t *\n\t * @generated from protobuf enum value: CANCELED = 4;\n\t */\n\tCANCELED = 4,\n\t/**\n\t * Read of a per-epoch config object that should remain the same during an\n\t * epoch. This optionally will indicate the sequence number of the config\n\t * object at the start of the epoch.\n\t *\n\t * @generated from protobuf enum value: PER_EPOCH_CONFIG = 5;\n\t */\n\tPER_EPOCH_CONFIG = 5,\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass TransactionEffects$Type extends MessageType<TransactionEffects> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2beta2.TransactionEffects', [\n\t\t\t{ no: 1, name: 'bcs', kind: 'message', T: () => Bcs },\n\t\t\t{ no: 2, name: 'digest', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 3, name: 'version', kind: 'scalar', opt: true, T: 5 /*ScalarType.INT32*/ },\n\t\t\t{ no: 4, name: 'status', kind: 'message', T: () => ExecutionStatus },\n\t\t\t{\n\t\t\t\tno: 5,\n\t\t\t\tname: 'epoch',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 6, name: 'gas_used', kind: 'message', T: () => GasCostSummary },\n\t\t\t{ no: 7, name: 'transaction_digest', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 8, name: 'gas_object', kind: 'message', T: () => ChangedObject },\n\t\t\t{ no: 9, name: 'events_digest', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 10,\n\t\t\t\tname: 'dependencies',\n\t\t\t\tkind: 'scalar',\n\t\t\t\trepeat: 2 /*RepeatType.UNPACKED*/,\n\t\t\t\tT: 9 /*ScalarType.STRING*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 11,\n\t\t\t\tname: 'lamport_version',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 12,\n\t\t\t\tname: 'changed_objects',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 2 /*RepeatType.UNPACKED*/,\n\t\t\t\tT: () => ChangedObject,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 13,\n\t\t\t\tname: 'unchanged_shared_objects',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 2 /*RepeatType.UNPACKED*/,\n\t\t\t\tT: () => UnchangedSharedObject,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 14,\n\t\t\t\tname: 'auxiliary_data_digest',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 9 /*ScalarType.STRING*/,\n\t\t\t},\n\t\t]);\n\t}\n\tcreate(value?: PartialMessage<TransactionEffects>): TransactionEffects {\n\t\tconst message = globalThis.Object.create(this.messagePrototype!);\n\t\tmessage.dependencies = [];\n\t\tmessage.changedObjects = [];\n\t\tmessage.unchangedSharedObjects = [];\n\t\tif (value !== undefined) reflectionMergePartial<TransactionEffects>(this, message, value);\n\t\treturn message;\n\t}\n\tinternalBinaryRead(\n\t\treader: IBinaryReader,\n\t\tlength: number,\n\t\toptions: BinaryReadOptions,\n\t\ttarget?: TransactionEffects,\n\t): TransactionEffects {\n\t\tlet message = target ?? this.create(),\n\t\t\tend = reader.pos + length;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tcase /* optional sui.rpc.v2beta2.Bcs bcs */ 1:\n\t\t\t\t\tmessage.bcs = Bcs.internalBinaryRead(reader, reader.uint32(), options, message.bcs);\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional string digest */ 2:\n\t\t\t\t\tmessage.digest = reader.string();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional int32 version */ 3:\n\t\t\t\t\tmessage.version = reader.int32();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional sui.rpc.v2beta2.ExecutionStatus status */ 4:\n\t\t\t\t\tmessage.status = ExecutionStatus.internalBinaryRead(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmessage.status,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional uint64 epoch */ 5:\n\t\t\t\t\tmessage.epoch = reader.uint64().toBigInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional sui.rpc.v2beta2.GasCostSummary gas_used */ 6:\n\t\t\t\t\tmessage.gasUsed = GasCostSummary.internalBinaryRead(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmessage.gasUsed,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional string transaction_digest */ 7:\n\t\t\t\t\tmessage.transactionDigest = reader.string();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional sui.rpc.v2beta2.ChangedObject gas_object */ 8:\n\t\t\t\t\tmessage.gasObject = ChangedObject.internalBinaryRead(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmessage.gasObject,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional string events_digest */ 9:\n\t\t\t\t\tmessage.eventsDigest = reader.string();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* repeated string dependencies */ 10:\n\t\t\t\t\tmessage.dependencies.push(reader.string());\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional uint64 lamport_version */ 11:\n\t\t\t\t\tmessage.lamportVersion = reader.uint64().toBigInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* repeated sui.rpc.v2beta2.ChangedObject changed_objects */ 12:\n\t\t\t\t\tmessage.changedObjects.push(\n\t\t\t\t\t\tChangedObject.internalBinaryRead(reader, reader.uint32(), options),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* repeated sui.rpc.v2beta2.UnchangedSharedObject unchanged_shared_objects */ 13:\n\t\t\t\t\tmessage.unchangedSharedObjects.push(\n\t\t\t\t\t\tUnchangedSharedObject.internalBinaryRead(reader, reader.uint32(), options),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional string auxiliary_data_digest */ 14:\n\t\t\t\t\tmessage.auxiliaryDataDigest = reader.string();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet u = options.readUnknownField;\n\t\t\t\t\tif (u === 'throw')\n\t\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t\t`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,\n\t\t\t\t\t\t);\n\t\t\t\t\tlet d = reader.skip(wireType);\n\t\t\t\t\tif (u !== false)\n\t\t\t\t\t\t(u === true ? UnknownFieldHandler.onRead : u)(\n\t\t\t\t\t\t\tthis.typeName,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tfieldNo,\n\t\t\t\t\t\t\twireType,\n\t\t\t\t\t\t\td,\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\tinternalBinaryWrite(\n\t\tmessage: TransactionEffects,\n\t\twriter: IBinaryWriter,\n\t\toptions: BinaryWriteOptions,\n\t): IBinaryWriter {\n\t\t/* optional sui.rpc.v2beta2.Bcs bcs = 1; */\n\t\tif (message.bcs)\n\t\t\tBcs.internalBinaryWrite(\n\t\t\t\tmessage.bcs,\n\t\t\t\twriter.tag(1, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\t/* optional string digest = 2; */\n\t\tif (message.digest !== undefined)\n\t\t\twriter.tag(2, WireType.LengthDelimited).string(message.digest);\n\t\t/* optional int32 version = 3; */\n\t\tif (message.version !== undefined) writer.tag(3, WireType.Varint).int32(message.version);\n\t\t/* optional sui.rpc.v2beta2.ExecutionStatus status = 4; */\n\t\tif (message.status)\n\t\t\tExecutionStatus.internalBinaryWrite(\n\t\t\t\tmessage.status,\n\t\t\t\twriter.tag(4, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\t/* optional uint64 epoch = 5; */\n\t\tif (message.epoch !== undefined) writer.tag(5, WireType.Varint).uint64(message.epoch);\n\t\t/* optional sui.rpc.v2beta2.GasCostSummary gas_used = 6; */\n\t\tif (message.gasUsed)\n\t\t\tGasCostSummary.internalBinaryWrite(\n\t\t\t\tmessage.gasUsed,\n\t\t\t\twriter.tag(6, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\t/* optional string transaction_digest = 7; */\n\t\tif (message.transactionDigest !== undefined)\n\t\t\twriter.tag(7, WireType.LengthDelimited).string(message.transactionDigest);\n\t\t/* optional sui.rpc.v2beta2.ChangedObject gas_object = 8; */\n\t\tif (message.gasObject)\n\t\t\tChangedObject.internalBinaryWrite(\n\t\t\t\tmessage.gasObject,\n\t\t\t\twriter.tag(8, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\t/* optional string events_digest = 9; */\n\t\tif (message.eventsDigest !== undefined)\n\t\t\twriter.tag(9, WireType.LengthDelimited).string(message.eventsDigest);\n\t\t/* repeated string dependencies = 10; */\n\t\tfor (let i = 0; i < message.dependencies.length; i++)\n\t\t\twriter.tag(10, WireType.LengthDelimited).string(message.dependencies[i]);\n\t\t/* optional uint64 lamport_version = 11; */\n\t\tif (message.lamportVersion !== undefined)\n\t\t\twriter.tag(11, WireType.Varint).uint64(message.lamportVersion);\n\t\t/* repeated sui.rpc.v2beta2.ChangedObject changed_objects = 12; */\n\t\tfor (let i = 0; i < message.changedObjects.length; i++)\n\t\t\tChangedObject.internalBinaryWrite(\n\t\t\t\tmessage.changedObjects[i],\n\t\t\t\twriter.tag(12, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\t/* repeated sui.rpc.v2beta2.UnchangedSharedObject unchanged_shared_objects = 13; */\n\t\tfor (let i = 0; i < message.unchangedSharedObjects.length; i++)\n\t\t\tUnchangedSharedObject.internalBinaryWrite(\n\t\t\t\tmessage.unchangedSharedObjects[i],\n\t\t\t\twriter.tag(13, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\t/* optional string auxiliary_data_digest = 14; */\n\t\tif (message.auxiliaryDataDigest !== undefined)\n\t\t\twriter.tag(14, WireType.LengthDelimited).string(message.auxiliaryDataDigest);\n\t\tlet u = options.writeUnknownFields;\n\t\tif (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n\t\treturn writer;\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2beta2.TransactionEffects\n */\nexport const TransactionEffects = new TransactionEffects$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ChangedObject$Type extends MessageType<ChangedObject> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2beta2.ChangedObject', [\n\t\t\t{ no: 1, name: 'object_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'input_state',\n\t\t\t\tkind: 'enum',\n\t\t\t\topt: true,\n\t\t\t\tT: () => [\n\t\t\t\t\t'sui.rpc.v2beta2.ChangedObject.InputObjectState',\n\t\t\t\t\tChangedObject_InputObjectState,\n\t\t\t\t\t'INPUT_OBJECT_STATE_',\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'input_version',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 4, name: 'input_digest', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 5, name: 'input_owner', kind: 'message', T: () => Owner },\n\t\t\t{\n\t\t\t\tno: 6,\n\t\t\t\tname: 'output_state',\n\t\t\t\tkind: 'enum',\n\t\t\t\topt: true,\n\t\t\t\tT: () => [\n\t\t\t\t\t'sui.rpc.v2beta2.ChangedObject.OutputObjectState',\n\t\t\t\t\tChangedObject_OutputObjectState,\n\t\t\t\t\t'OUTPUT_OBJECT_STATE_',\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 7,\n\t\t\t\tname: 'output_version',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 8, name: 'output_digest', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 9, name: 'output_owner', kind: 'message', T: () => Owner },\n\t\t\t{\n\t\t\t\tno: 10,\n\t\t\t\tname: 'id_operation',\n\t\t\t\tkind: 'enum',\n\t\t\t\topt: true,\n\t\t\t\tT: () => ['sui.rpc.v2beta2.ChangedObject.IdOperation', ChangedObject_IdOperation],\n\t\t\t},\n\t\t\t{ no: 11, name: 'object_type', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t]);\n\t}\n\tcreate(value?: PartialMessage<ChangedObject>): ChangedObject {\n\t\tconst message = globalThis.Object.create(this.messagePrototype!);\n\t\tif (value !== undefined) reflectionMergePartial<ChangedObject>(this, message, value);\n\t\treturn message;\n\t}\n\tinternalBinaryRead(\n\t\treader: IBinaryReader,\n\t\tlength: number,\n\t\toptions: BinaryReadOptions,\n\t\ttarget?: ChangedObject,\n\t): ChangedObject {\n\t\tlet message = target ?? this.create(),\n\t\t\tend = reader.pos + length;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tcase /* optional string object_id */ 1:\n\t\t\t\t\tmessage.objectId = reader.string();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional sui.rpc.v2beta2.ChangedObject.InputObjectState input_state */ 2:\n\t\t\t\t\tmessage.inputState = reader.int32();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional uint64 input_version */ 3:\n\t\t\t\t\tmessage.inputVersion = reader.uint64().toBigInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional string input_digest */ 4:\n\t\t\t\t\tmessage.inputDigest = reader.string();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional sui.rpc.v2beta2.Owner input_owner */ 5:\n\t\t\t\t\tmessage.inputOwner = Owner.internalBinaryRead(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmessage.inputOwner,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional sui.rpc.v2beta2.ChangedObject.OutputObjectState output_state */ 6:\n\t\t\t\t\tmessage.outputState = reader.int32();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional uint64 output_version */ 7:\n\t\t\t\t\tmessage.outputVersion = reader.uint64().toBigInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional string output_digest */ 8:\n\t\t\t\t\tmessage.outputDigest = reader.string();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional sui.rpc.v2beta2.Owner output_owner */ 9:\n\t\t\t\t\tmessage.outputOwner = Owner.internalBinaryRead(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmessage.outputOwner,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional sui.rpc.v2beta2.ChangedObject.IdOperation id_operation */ 10:\n\t\t\t\t\tmessage.idOperation = reader.int32();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional string object_type */ 11:\n\t\t\t\t\tmessage.objectType = reader.string();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet u = options.readUnknownField;\n\t\t\t\t\tif (u === 'throw')\n\t\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t\t`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,\n\t\t\t\t\t\t);\n\t\t\t\t\tlet d = reader.skip(wireType);\n\t\t\t\t\tif (u !== false)\n\t\t\t\t\t\t(u === true ? UnknownFieldHandler.onRead : u)(\n\t\t\t\t\t\t\tthis.typeName,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tfieldNo,\n\t\t\t\t\t\t\twireType,\n\t\t\t\t\t\t\td,\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\tinternalBinaryWrite(\n\t\tmessage: ChangedObject,\n\t\twriter: IBinaryWriter,\n\t\toptions: BinaryWriteOptions,\n\t): IBinaryWriter {\n\t\t/* optional string object_id = 1; */\n\t\tif (message.objectId !== undefined)\n\t\t\twriter.tag(1, WireType.LengthDelimited).string(message.objectId);\n\t\t/* optional sui.rpc.v2beta2.ChangedObject.InputObjectState input_state = 2; */\n\t\tif (message.inputState !== undefined) writer.tag(2, WireType.Varint).int32(message.inputState);\n\t\t/* optional uint64 input_version = 3; */\n\t\tif (message.inputVersion !== undefined)\n\t\t\twriter.tag(3, WireType.Varint).uint64(message.inputVersion);\n\t\t/* optional string input_digest = 4; */\n\t\tif (message.inputDigest !== undefined)\n\t\t\twriter.tag(4, WireType.LengthDelimited).string(message.inputDigest);\n\t\t/* optional sui.rpc.v2beta2.Owner input_owner = 5; */\n\t\tif (message.inputOwner)\n\t\t\tOwner.internalBinaryWrite(\n\t\t\t\tmessage.inputOwner,\n\t\t\t\twriter.tag(5, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\t/* optional sui.rpc.v2beta2.ChangedObject.OutputObjectState output_state = 6; */\n\t\tif (message.outputState !== undefined)\n\t\t\twriter.tag(6, WireType.Varint).int32(message.outputState);\n\t\t/* optional uint64 output_version = 7; */\n\t\tif (message.outputVersion !== undefined)\n\t\t\twriter.tag(7, WireType.Varint).uint64(message.outputVersion);\n\t\t/* optional string output_digest = 8; */\n\t\tif (message.outputDigest !== undefined)\n\t\t\twriter.tag(8, WireType.LengthDelimited).string(message.outputDigest);\n\t\t/* optional sui.rpc.v2beta2.Owner output_owner = 9; */\n\t\tif (message.outputOwner)\n\t\t\tOwner.internalBinaryWrite(\n\t\t\t\tmessage.outputOwner,\n\t\t\t\twriter.tag(9, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\t/* optional sui.rpc.v2beta2.ChangedObject.IdOperation id_operation = 10; */\n\t\tif (message.idOperation !== undefined)\n\t\t\twriter.tag(10, WireType.Varint).int32(message.idOperation);\n\t\t/* optional string object_type = 11; */\n\t\tif (message.objectType !== undefined)\n\t\t\twriter.tag(11, WireType.LengthDelimited).string(message.objectType);\n\t\tlet u = options.writeUnknownFields;\n\t\tif (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n\t\treturn writer;\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2beta2.ChangedObject\n */\nexport const ChangedObject = new ChangedObject$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass UnchangedSharedObject$Type extends MessageType<UnchangedSharedObject> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2beta2.UnchangedSharedObject', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'kind',\n\t\t\t\tkind: 'enum',\n\t\t\t\topt: true,\n\t\t\t\tT: () => [\n\t\t\t\t\t'sui.rpc.v2beta2.UnchangedSharedObject.UnchangedSharedObjectKind',\n\t\t\t\t\tUnchangedSharedObject_UnchangedSharedObjectKind,\n\t\t\t\t],\n\t\t\t},\n\t\t\t{ no: 2, name: 'object_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'version',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 4, name: 'digest', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 5, name: 'object_type', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t]);\n\t}\n\tcreate(value?: PartialMessage<UnchangedSharedObject>): UnchangedSharedObject {\n\t\tconst message = globalThis.Object.create(this.messagePrototype!);\n\t\tif (value !== undefined) reflectionMergePartial<UnchangedSharedObject>(this, message, value);\n\t\treturn message;\n\t}\n\tinternalBinaryRead(\n\t\treader: IBinaryReader,\n\t\tlength: number,\n\t\toptions: BinaryReadOptions,\n\t\ttarget?: UnchangedSharedObject,\n\t): UnchangedSharedObject {\n\t\tlet message = target ?? this.create(),\n\t\t\tend = reader.pos + length;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tcase /* optional sui.rpc.v2beta2.UnchangedSharedObject.UnchangedSharedObjectKind kind */ 1:\n\t\t\t\t\tmessage.kind = reader.int32();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional string object_id */ 2:\n\t\t\t\t\tmessage.objectId = reader.string();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional uint64 version */ 3:\n\t\t\t\t\tmessage.version = reader.uint64().toBigInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional string digest */ 4:\n\t\t\t\t\tmessage.digest = reader.string();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional string object_type */ 5:\n\t\t\t\t\tmessage.objectType = reader.string();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet u = options.readUnknownField;\n\t\t\t\t\tif (u === 'throw')\n\t\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t\t`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,\n\t\t\t\t\t\t);\n\t\t\t\t\tlet d = reader.skip(wireType);\n\t\t\t\t\tif (u !== false)\n\t\t\t\t\t\t(u === true ? UnknownFieldHandler.onRead : u)(\n\t\t\t\t\t\t\tthis.typeName,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tfieldNo,\n\t\t\t\t\t\t\twireType,\n\t\t\t\t\t\t\td,\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\tinternalBinaryWrite(\n\t\tmessage: UnchangedSharedObject,\n\t\twriter: IBinaryWriter,\n\t\toptions: BinaryWriteOptions,\n\t): IBinaryWriter {\n\t\t/* optional sui.rpc.v2beta2.UnchangedSharedObject.UnchangedSharedObjectKind kind = 1; */\n\t\tif (message.kind !== undefined) writer.tag(1, WireType.Varint).int32(message.kind);\n\t\t/* optional string object_id = 2; */\n\t\tif (message.objectId !== undefined)\n\t\t\twriter.tag(2, WireType.LengthDelimited).string(message.objectId);\n\t\t/* optional uint64 version = 3; */\n\t\tif (message.version !== undefined) writer.tag(3, WireType.Varint).uint64(message.version);\n\t\t/* optional string digest = 4; */\n\t\tif (message.digest !== undefined)\n\t\t\twriter.tag(4, WireType.LengthDelimited).string(message.digest);\n\t\t/* optional string object_type = 5; */\n\t\tif (message.objectType !== undefined)\n\t\t\twriter.tag(5, WireType.LengthDelimited).string(message.objectType);\n\t\tlet u = options.writeUnknownFields;\n\t\tif (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n\t\treturn writer;\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2beta2.UnchangedSharedObject\n */\nexport const UnchangedSharedObject = new UnchangedSharedObject$Type();\n"],
  "mappings": "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",
  "names": ["ChangedObject_InputObjectState", "ChangedObject_OutputObjectState", "ChangedObject_IdOperation", "UnchangedSharedObject_UnchangedSharedObjectKind"]
}
