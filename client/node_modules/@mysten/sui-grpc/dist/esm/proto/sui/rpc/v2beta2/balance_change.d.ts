import type { BinaryWriteOptions } from '@protobuf-ts/runtime';
import type { IBinaryWriter } from '@protobuf-ts/runtime';
import type { BinaryReadOptions } from '@protobuf-ts/runtime';
import type { IBinaryReader } from '@protobuf-ts/runtime';
import type { PartialMessage } from '@protobuf-ts/runtime';
import { MessageType } from '@protobuf-ts/runtime';
/**
 * The delta, or change, in balance for an address for a particular `Coin` type.
 *
 * @generated from protobuf message sui.rpc.v2beta2.BalanceChange
 */
export interface BalanceChange {
    /**
     * The account address that is affected by this balance change event.
     *
     * @generated from protobuf field: optional string address = 1
     */
    address?: string;
    /**
     * The `Coin` type of this balance change event.
     *
     * @generated from protobuf field: optional string coin_type = 2
     */
    coinType?: string;
    /**
     * The amount or change in balance.
     *
     * @generated from protobuf field: optional string amount = 3
     */
    amount?: string;
}
declare class BalanceChange$Type extends MessageType<BalanceChange> {
    constructor();
    create(value?: PartialMessage<BalanceChange>): BalanceChange;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BalanceChange): BalanceChange;
    internalBinaryWrite(message: BalanceChange, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message sui.rpc.v2beta2.BalanceChange
 */
export declare const BalanceChange: BalanceChange$Type;
export {};
