{
  "version": 3,
  "sources": ["../../../../../../src/proto/sui/rpc/v2beta2/move_package_service.client.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\nimport type { RpcTransport } from '@protobuf-ts/runtime-rpc';\nimport type { ServiceInfo } from '@protobuf-ts/runtime-rpc';\nimport { MovePackageService } from './move_package_service.js';\nimport type { ListPackageVersionsResponse } from './move_package_service.js';\nimport type { ListPackageVersionsRequest } from './move_package_service.js';\nimport type { GetFunctionResponse } from './move_package_service.js';\nimport type { GetFunctionRequest } from './move_package_service.js';\nimport type { GetDatatypeResponse } from './move_package_service.js';\nimport type { GetDatatypeRequest } from './move_package_service.js';\nimport { stackIntercept } from '@protobuf-ts/runtime-rpc';\nimport type { GetPackageResponse } from './move_package_service.js';\nimport type { GetPackageRequest } from './move_package_service.js';\nimport type { UnaryCall } from '@protobuf-ts/runtime-rpc';\nimport type { RpcOptions } from '@protobuf-ts/runtime-rpc';\n/**\n * @generated from protobuf service sui.rpc.v2beta2.MovePackageService\n */\nexport interface IMovePackageServiceClient {\n\t/**\n\t * @generated from protobuf rpc: GetPackage\n\t */\n\tgetPackage(\n\t\tinput: GetPackageRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<GetPackageRequest, GetPackageResponse>;\n\t/**\n\t * @generated from protobuf rpc: GetDatatype\n\t */\n\tgetDatatype(\n\t\tinput: GetDatatypeRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<GetDatatypeRequest, GetDatatypeResponse>;\n\t/**\n\t * @generated from protobuf rpc: GetFunction\n\t */\n\tgetFunction(\n\t\tinput: GetFunctionRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<GetFunctionRequest, GetFunctionResponse>;\n\t/**\n\t * @generated from protobuf rpc: ListPackageVersions\n\t */\n\tlistPackageVersions(\n\t\tinput: ListPackageVersionsRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<ListPackageVersionsRequest, ListPackageVersionsResponse>;\n}\n/**\n * @generated from protobuf service sui.rpc.v2beta2.MovePackageService\n */\nexport class MovePackageServiceClient implements IMovePackageServiceClient, ServiceInfo {\n\ttypeName = MovePackageService.typeName;\n\tmethods = MovePackageService.methods;\n\toptions = MovePackageService.options;\n\tconstructor(private readonly _transport: RpcTransport) {}\n\t/**\n\t * @generated from protobuf rpc: GetPackage\n\t */\n\tgetPackage(\n\t\tinput: GetPackageRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<GetPackageRequest, GetPackageResponse> {\n\t\tconst method = this.methods[0],\n\t\t\topt = this._transport.mergeOptions(options);\n\t\treturn stackIntercept<GetPackageRequest, GetPackageResponse>(\n\t\t\t'unary',\n\t\t\tthis._transport,\n\t\t\tmethod,\n\t\t\topt,\n\t\t\tinput,\n\t\t);\n\t}\n\t/**\n\t * @generated from protobuf rpc: GetDatatype\n\t */\n\tgetDatatype(\n\t\tinput: GetDatatypeRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<GetDatatypeRequest, GetDatatypeResponse> {\n\t\tconst method = this.methods[1],\n\t\t\topt = this._transport.mergeOptions(options);\n\t\treturn stackIntercept<GetDatatypeRequest, GetDatatypeResponse>(\n\t\t\t'unary',\n\t\t\tthis._transport,\n\t\t\tmethod,\n\t\t\topt,\n\t\t\tinput,\n\t\t);\n\t}\n\t/**\n\t * @generated from protobuf rpc: GetFunction\n\t */\n\tgetFunction(\n\t\tinput: GetFunctionRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<GetFunctionRequest, GetFunctionResponse> {\n\t\tconst method = this.methods[2],\n\t\t\topt = this._transport.mergeOptions(options);\n\t\treturn stackIntercept<GetFunctionRequest, GetFunctionResponse>(\n\t\t\t'unary',\n\t\t\tthis._transport,\n\t\t\tmethod,\n\t\t\topt,\n\t\t\tinput,\n\t\t);\n\t}\n\t/**\n\t * @generated from protobuf rpc: ListPackageVersions\n\t */\n\tlistPackageVersions(\n\t\tinput: ListPackageVersionsRequest,\n\t\toptions?: RpcOptions,\n\t): UnaryCall<ListPackageVersionsRequest, ListPackageVersionsResponse> {\n\t\tconst method = this.methods[3],\n\t\t\topt = this._transport.mergeOptions(options);\n\t\treturn stackIntercept<ListPackageVersionsRequest, ListPackageVersionsResponse>(\n\t\t\t'unary',\n\t\t\tthis._transport,\n\t\t\tmethod,\n\t\t\topt,\n\t\t\tinput,\n\t\t);\n\t}\n}\n"],
  "mappings": "AAIA,SAAS,0BAA0B;AAOnC,SAAS,sBAAsB;AAyCxB,MAAM,yBAA2E;AAAA,EAIvF,YAA6B,YAA0B;AAA1B;AAH7B,oBAAW,mBAAmB;AAC9B,mBAAU,mBAAmB;AAC7B,mBAAU,mBAAmB;AAAA,EAC2B;AAAA;AAAA;AAAA;AAAA,EAIxD,WACC,OACA,SACmD;AACnD,UAAM,SAAS,KAAK,QAAQ,CAAC,GAC5B,MAAM,KAAK,WAAW,aAAa,OAAO;AAC3C,WAAO;AAAA,MACN;AAAA,MACA,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA;AAAA;AAAA;AAAA,EAIA,YACC,OACA,SACqD;AACrD,UAAM,SAAS,KAAK,QAAQ,CAAC,GAC5B,MAAM,KAAK,WAAW,aAAa,OAAO;AAC3C,WAAO;AAAA,MACN;AAAA,MACA,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA;AAAA;AAAA;AAAA,EAIA,YACC,OACA,SACqD;AACrD,UAAM,SAAS,KAAK,QAAQ,CAAC,GAC5B,MAAM,KAAK,WAAW,aAAa,OAAO;AAC3C,WAAO;AAAA,MACN;AAAA,MACA,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA;AAAA;AAAA;AAAA,EAIA,oBACC,OACA,SACqE;AACrE,UAAM,SAAS,KAAK,QAAQ,CAAC,GAC5B,MAAM,KAAK,WAAW,aAAa,OAAO;AAC3C,WAAO;AAAA,MACN;AAAA,MACA,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;",
  "names": []
}
