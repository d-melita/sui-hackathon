{
  "version": 3,
  "sources": ["../../../../../../src/proto/sui/rpc/v2beta2/executed_transaction.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\nimport type { BinaryWriteOptions } from '@protobuf-ts/runtime';\nimport type { IBinaryWriter } from '@protobuf-ts/runtime';\nimport { WireType } from '@protobuf-ts/runtime';\nimport type { BinaryReadOptions } from '@protobuf-ts/runtime';\nimport type { IBinaryReader } from '@protobuf-ts/runtime';\nimport { UnknownFieldHandler } from '@protobuf-ts/runtime';\nimport type { PartialMessage } from '@protobuf-ts/runtime';\nimport { reflectionMergePartial } from '@protobuf-ts/runtime';\nimport { MessageType } from '@protobuf-ts/runtime';\nimport { Object } from './object.js';\nimport { BalanceChange } from './balance_change.js';\nimport { Timestamp } from '../../../google/protobuf/timestamp.js';\nimport { TransactionEvents } from './event.js';\nimport { TransactionEffects } from './effects.js';\nimport { UserSignature } from './signature.js';\nimport { Transaction } from './transaction.js';\n/**\n * @generated from protobuf message sui.rpc.v2beta2.ExecutedTransaction\n */\nexport interface ExecutedTransaction {\n\t/**\n\t * The digest of this Transaction.\n\t *\n\t * @generated from protobuf field: optional string digest = 1\n\t */\n\tdigest?: string;\n\t/**\n\t * The transaction itself.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2beta2.Transaction transaction = 2\n\t */\n\ttransaction?: Transaction;\n\t/**\n\t * List of user signatures that are used to authorize the\n\t * execution of this transaction.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2beta2.UserSignature signatures = 3\n\t */\n\tsignatures: UserSignature[];\n\t/**\n\t * The `TransactionEffects` for this transaction.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2beta2.TransactionEffects effects = 4\n\t */\n\teffects?: TransactionEffects;\n\t/**\n\t * The `TransactionEvents` for this transaction.\n\t *\n\t * This field might be empty, even if it was explicitly requested, if the\n\t * transaction didn't produce any events.\n\t * `sui.types.TransactionEffects.events_digest` is populated if the\n\t * transaction produced any events.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2beta2.TransactionEvents events = 5\n\t */\n\tevents?: TransactionEvents;\n\t/**\n\t * The sequence number for the checkpoint that includes this transaction.\n\t *\n\t * @generated from protobuf field: optional uint64 checkpoint = 6\n\t */\n\tcheckpoint?: bigint;\n\t/**\n\t * The Unix timestamp of the checkpoint that includes this transaction.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.Timestamp timestamp = 7\n\t */\n\ttimestamp?: Timestamp;\n\t/**\n\t * @generated from protobuf field: repeated sui.rpc.v2beta2.BalanceChange balance_changes = 8\n\t */\n\tbalanceChanges: BalanceChange[];\n\t/**\n\t * Set of input objects used during the execution of this transaction.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2beta2.Object input_objects = 10\n\t */\n\tinputObjects: Object[];\n\t/**\n\t * Set of output objects produced from the execution of this transaction.\n\t *\n\t * @generated from protobuf field: repeated sui.rpc.v2beta2.Object output_objects = 11\n\t */\n\toutputObjects: Object[];\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass ExecutedTransaction$Type extends MessageType<ExecutedTransaction> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2beta2.ExecutedTransaction', [\n\t\t\t{ no: 1, name: 'digest', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'transaction', kind: 'message', T: () => Transaction },\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'signatures',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 2 /*RepeatType.UNPACKED*/,\n\t\t\t\tT: () => UserSignature,\n\t\t\t},\n\t\t\t{ no: 4, name: 'effects', kind: 'message', T: () => TransactionEffects },\n\t\t\t{ no: 5, name: 'events', kind: 'message', T: () => TransactionEvents },\n\t\t\t{\n\t\t\t\tno: 6,\n\t\t\t\tname: 'checkpoint',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 7, name: 'timestamp', kind: 'message', T: () => Timestamp },\n\t\t\t{\n\t\t\t\tno: 8,\n\t\t\t\tname: 'balance_changes',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 2 /*RepeatType.UNPACKED*/,\n\t\t\t\tT: () => BalanceChange,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 10,\n\t\t\t\tname: 'input_objects',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 2 /*RepeatType.UNPACKED*/,\n\t\t\t\tT: () => Object,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 11,\n\t\t\t\tname: 'output_objects',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 2 /*RepeatType.UNPACKED*/,\n\t\t\t\tT: () => Object,\n\t\t\t},\n\t\t]);\n\t}\n\tcreate(value?: PartialMessage<ExecutedTransaction>): ExecutedTransaction {\n\t\tconst message = globalThis.Object.create(this.messagePrototype!);\n\t\tmessage.signatures = [];\n\t\tmessage.balanceChanges = [];\n\t\tmessage.inputObjects = [];\n\t\tmessage.outputObjects = [];\n\t\tif (value !== undefined) reflectionMergePartial<ExecutedTransaction>(this, message, value);\n\t\treturn message;\n\t}\n\tinternalBinaryRead(\n\t\treader: IBinaryReader,\n\t\tlength: number,\n\t\toptions: BinaryReadOptions,\n\t\ttarget?: ExecutedTransaction,\n\t): ExecutedTransaction {\n\t\tlet message = target ?? this.create(),\n\t\t\tend = reader.pos + length;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tcase /* optional string digest */ 1:\n\t\t\t\t\tmessage.digest = reader.string();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional sui.rpc.v2beta2.Transaction transaction */ 2:\n\t\t\t\t\tmessage.transaction = Transaction.internalBinaryRead(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmessage.transaction,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* repeated sui.rpc.v2beta2.UserSignature signatures */ 3:\n\t\t\t\t\tmessage.signatures.push(\n\t\t\t\t\t\tUserSignature.internalBinaryRead(reader, reader.uint32(), options),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional sui.rpc.v2beta2.TransactionEffects effects */ 4:\n\t\t\t\t\tmessage.effects = TransactionEffects.internalBinaryRead(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmessage.effects,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional sui.rpc.v2beta2.TransactionEvents events */ 5:\n\t\t\t\t\tmessage.events = TransactionEvents.internalBinaryRead(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmessage.events,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional uint64 checkpoint */ 6:\n\t\t\t\t\tmessage.checkpoint = reader.uint64().toBigInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional google.protobuf.Timestamp timestamp */ 7:\n\t\t\t\t\tmessage.timestamp = Timestamp.internalBinaryRead(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmessage.timestamp,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* repeated sui.rpc.v2beta2.BalanceChange balance_changes */ 8:\n\t\t\t\t\tmessage.balanceChanges.push(\n\t\t\t\t\t\tBalanceChange.internalBinaryRead(reader, reader.uint32(), options),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* repeated sui.rpc.v2beta2.Object input_objects */ 10:\n\t\t\t\t\tmessage.inputObjects.push(Object.internalBinaryRead(reader, reader.uint32(), options));\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* repeated sui.rpc.v2beta2.Object output_objects */ 11:\n\t\t\t\t\tmessage.outputObjects.push(Object.internalBinaryRead(reader, reader.uint32(), options));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet u = options.readUnknownField;\n\t\t\t\t\tif (u === 'throw')\n\t\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t\t`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,\n\t\t\t\t\t\t);\n\t\t\t\t\tlet d = reader.skip(wireType);\n\t\t\t\t\tif (u !== false)\n\t\t\t\t\t\t(u === true ? UnknownFieldHandler.onRead : u)(\n\t\t\t\t\t\t\tthis.typeName,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tfieldNo,\n\t\t\t\t\t\t\twireType,\n\t\t\t\t\t\t\td,\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\tinternalBinaryWrite(\n\t\tmessage: ExecutedTransaction,\n\t\twriter: IBinaryWriter,\n\t\toptions: BinaryWriteOptions,\n\t): IBinaryWriter {\n\t\t/* optional string digest = 1; */\n\t\tif (message.digest !== undefined)\n\t\t\twriter.tag(1, WireType.LengthDelimited).string(message.digest);\n\t\t/* optional sui.rpc.v2beta2.Transaction transaction = 2; */\n\t\tif (message.transaction)\n\t\t\tTransaction.internalBinaryWrite(\n\t\t\t\tmessage.transaction,\n\t\t\t\twriter.tag(2, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\t/* repeated sui.rpc.v2beta2.UserSignature signatures = 3; */\n\t\tfor (let i = 0; i < message.signatures.length; i++)\n\t\t\tUserSignature.internalBinaryWrite(\n\t\t\t\tmessage.signatures[i],\n\t\t\t\twriter.tag(3, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\t/* optional sui.rpc.v2beta2.TransactionEffects effects = 4; */\n\t\tif (message.effects)\n\t\t\tTransactionEffects.internalBinaryWrite(\n\t\t\t\tmessage.effects,\n\t\t\t\twriter.tag(4, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\t/* optional sui.rpc.v2beta2.TransactionEvents events = 5; */\n\t\tif (message.events)\n\t\t\tTransactionEvents.internalBinaryWrite(\n\t\t\t\tmessage.events,\n\t\t\t\twriter.tag(5, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\t/* optional uint64 checkpoint = 6; */\n\t\tif (message.checkpoint !== undefined) writer.tag(6, WireType.Varint).uint64(message.checkpoint);\n\t\t/* optional google.protobuf.Timestamp timestamp = 7; */\n\t\tif (message.timestamp)\n\t\t\tTimestamp.internalBinaryWrite(\n\t\t\t\tmessage.timestamp,\n\t\t\t\twriter.tag(7, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\t/* repeated sui.rpc.v2beta2.BalanceChange balance_changes = 8; */\n\t\tfor (let i = 0; i < message.balanceChanges.length; i++)\n\t\t\tBalanceChange.internalBinaryWrite(\n\t\t\t\tmessage.balanceChanges[i],\n\t\t\t\twriter.tag(8, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\t/* repeated sui.rpc.v2beta2.Object input_objects = 10; */\n\t\tfor (let i = 0; i < message.inputObjects.length; i++)\n\t\t\tObject.internalBinaryWrite(\n\t\t\t\tmessage.inputObjects[i],\n\t\t\t\twriter.tag(10, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\t/* repeated sui.rpc.v2beta2.Object output_objects = 11; */\n\t\tfor (let i = 0; i < message.outputObjects.length; i++)\n\t\t\tObject.internalBinaryWrite(\n\t\t\t\tmessage.outputObjects[i],\n\t\t\t\twriter.tag(11, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\tlet u = options.writeUnknownFields;\n\t\tif (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n\t\treturn writer;\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2beta2.ExecutedTransaction\n */\nexport const ExecutedTransaction = new ExecutedTransaction$Type();\n"],
  "mappings": "AAIA,SAAS,gBAAgB;AAGzB,SAAS,2BAA2B;AAEpC,SAAS,8BAA8B;AACvC,SAAS,mBAAmB;AAC5B,SAAS,cAAc;AACvB,SAAS,qBAAqB;AAC9B,SAAS,iBAAiB;AAC1B,SAAS,yBAAyB;AAClC,SAAS,0BAA0B;AACnC,SAAS,qBAAqB;AAC9B,SAAS,mBAAmB;AAuE5B,MAAM,iCAAiC,YAAiC;AAAA,EACvE,cAAc;AACb,UAAM,uCAAuC;AAAA,MAC5C;AAAA,QAAE,IAAI;AAAA,QAAG,MAAM;AAAA,QAAU,MAAM;AAAA,QAAU,KAAK;AAAA,QAAM,GAAG;AAAA;AAAA,MAAwB;AAAA,MAC/E,EAAE,IAAI,GAAG,MAAM,eAAe,MAAM,WAAW,GAAG,MAAM,YAAY;AAAA,MACpE;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,GAAG,MAAM;AAAA,MACV;AAAA,MACA,EAAE,IAAI,GAAG,MAAM,WAAW,MAAM,WAAW,GAAG,MAAM,mBAAmB;AAAA,MACvE,EAAE,IAAI,GAAG,MAAM,UAAU,MAAM,WAAW,GAAG,MAAM,kBAAkB;AAAA,MACrE;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,KAAK;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,MACJ;AAAA,MACA,EAAE,IAAI,GAAG,MAAM,aAAa,MAAM,WAAW,GAAG,MAAM,UAAU;AAAA,MAChE;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,GAAG,MAAM;AAAA,MACV;AAAA,MACA;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,GAAG,MAAM;AAAA,MACV;AAAA,MACA;AAAA,QACC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,GAAG,MAAM;AAAA,MACV;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EACA,OAAO,OAAkE;AACxE,UAAM,UAAU,WAAW,OAAO,OAAO,KAAK,gBAAiB;AAC/D,YAAQ,aAAa,CAAC;AACtB,YAAQ,iBAAiB,CAAC;AAC1B,YAAQ,eAAe,CAAC;AACxB,YAAQ,gBAAgB,CAAC;AACzB,QAAI,UAAU,OAAW,wBAA4C,MAAM,SAAS,KAAK;AACzF,WAAO;AAAA,EACR;AAAA,EACA,mBACC,QACA,QACA,SACA,QACsB;AACtB,QAAI,UAAU,UAAU,KAAK,OAAO,GACnC,MAAM,OAAO,MAAM;AACpB,WAAO,OAAO,MAAM,KAAK;AACxB,UAAI,CAAC,SAAS,QAAQ,IAAI,OAAO,IAAI;AACrC,cAAQ,SAAS;AAAA,QAChB;AAAA,QAAkC;AACjC,kBAAQ,SAAS,OAAO,OAAO;AAC/B;AAAA,QACD;AAAA,QAA4D;AAC3D,kBAAQ,cAAc,YAAY;AAAA,YACjC;AAAA,YACA,OAAO,OAAO;AAAA,YACd;AAAA,YACA,QAAQ;AAAA,UACT;AACA;AAAA,QACD;AAAA,QAA6D;AAC5D,kBAAQ,WAAW;AAAA,YAClB,cAAc,mBAAmB,QAAQ,OAAO,OAAO,GAAG,OAAO;AAAA,UAClE;AACA;AAAA,QACD;AAAA,QAA+D;AAC9D,kBAAQ,UAAU,mBAAmB;AAAA,YACpC;AAAA,YACA,OAAO,OAAO;AAAA,YACd;AAAA,YACA,QAAQ;AAAA,UACT;AACA;AAAA,QACD;AAAA,QAA6D;AAC5D,kBAAQ,SAAS,kBAAkB;AAAA,YAClC;AAAA,YACA,OAAO,OAAO;AAAA,YACd;AAAA,YACA,QAAQ;AAAA,UACT;AACA;AAAA,QACD;AAAA,QAAsC;AACrC,kBAAQ,aAAa,OAAO,OAAO,EAAE,SAAS;AAC9C;AAAA,QACD;AAAA,QAAwD;AACvD,kBAAQ,YAAY,UAAU;AAAA,YAC7B;AAAA,YACA,OAAO,OAAO;AAAA,YACd;AAAA,YACA,QAAQ;AAAA,UACT;AACA;AAAA,QACD;AAAA,QAAkE;AACjE,kBAAQ,eAAe;AAAA,YACtB,cAAc,mBAAmB,QAAQ,OAAO,OAAO,GAAG,OAAO;AAAA,UAClE;AACA;AAAA,QACD;AAAA,QAAyD;AACxD,kBAAQ,aAAa,KAAK,OAAO,mBAAmB,QAAQ,OAAO,OAAO,GAAG,OAAO,CAAC;AACrF;AAAA,QACD;AAAA,QAA0D;AACzD,kBAAQ,cAAc,KAAK,OAAO,mBAAmB,QAAQ,OAAO,OAAO,GAAG,OAAO,CAAC;AACtF;AAAA,QACD;AACC,cAAI,IAAI,QAAQ;AAChB,cAAI,MAAM;AACT,kBAAM,IAAI,WAAW;AAAA,cACpB,iBAAiB,OAAO,eAAe,QAAQ,SAAS,KAAK,QAAQ;AAAA,YACtE;AACD,cAAI,IAAI,OAAO,KAAK,QAAQ;AAC5B,cAAI,MAAM;AACT,aAAC,MAAM,OAAO,oBAAoB,SAAS;AAAA,cAC1C,KAAK;AAAA,cACL;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACD;AAAA,MACH;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EACA,oBACC,SACA,QACA,SACgB;AAEhB,QAAI,QAAQ,WAAW;AACtB,aAAO,IAAI,GAAG,SAAS,eAAe,EAAE,OAAO,QAAQ,MAAM;AAE9D,QAAI,QAAQ;AACX,kBAAY;AAAA,QACX,QAAQ;AAAA,QACR,OAAO,IAAI,GAAG,SAAS,eAAe,EAAE,KAAK;AAAA,QAC7C;AAAA,MACD,EAAE,KAAK;AAER,aAAS,IAAI,GAAG,IAAI,QAAQ,WAAW,QAAQ;AAC9C,oBAAc;AAAA,QACb,QAAQ,WAAW,CAAC;AAAA,QACpB,OAAO,IAAI,GAAG,SAAS,eAAe,EAAE,KAAK;AAAA,QAC7C;AAAA,MACD,EAAE,KAAK;AAER,QAAI,QAAQ;AACX,yBAAmB;AAAA,QAClB,QAAQ;AAAA,QACR,OAAO,IAAI,GAAG,SAAS,eAAe,EAAE,KAAK;AAAA,QAC7C;AAAA,MACD,EAAE,KAAK;AAER,QAAI,QAAQ;AACX,wBAAkB;AAAA,QACjB,QAAQ;AAAA,QACR,OAAO,IAAI,GAAG,SAAS,eAAe,EAAE,KAAK;AAAA,QAC7C;AAAA,MACD,EAAE,KAAK;AAER,QAAI,QAAQ,eAAe,OAAW,QAAO,IAAI,GAAG,SAAS,MAAM,EAAE,OAAO,QAAQ,UAAU;AAE9F,QAAI,QAAQ;AACX,gBAAU;AAAA,QACT,QAAQ;AAAA,QACR,OAAO,IAAI,GAAG,SAAS,eAAe,EAAE,KAAK;AAAA,QAC7C;AAAA,MACD,EAAE,KAAK;AAER,aAAS,IAAI,GAAG,IAAI,QAAQ,eAAe,QAAQ;AAClD,oBAAc;AAAA,QACb,QAAQ,eAAe,CAAC;AAAA,QACxB,OAAO,IAAI,GAAG,SAAS,eAAe,EAAE,KAAK;AAAA,QAC7C;AAAA,MACD,EAAE,KAAK;AAER,aAAS,IAAI,GAAG,IAAI,QAAQ,aAAa,QAAQ;AAChD,aAAO;AAAA,QACN,QAAQ,aAAa,CAAC;AAAA,QACtB,OAAO,IAAI,IAAI,SAAS,eAAe,EAAE,KAAK;AAAA,QAC9C;AAAA,MACD,EAAE,KAAK;AAER,aAAS,IAAI,GAAG,IAAI,QAAQ,cAAc,QAAQ;AACjD,aAAO;AAAA,QACN,QAAQ,cAAc,CAAC;AAAA,QACvB,OAAO,IAAI,IAAI,SAAS,eAAe,EAAE,KAAK;AAAA,QAC9C;AAAA,MACD,EAAE,KAAK;AACR,QAAI,IAAI,QAAQ;AAChB,QAAI,MAAM,MAAO,EAAC,KAAK,OAAO,oBAAoB,UAAU,GAAG,KAAK,UAAU,SAAS,MAAM;AAC7F,WAAO;AAAA,EACR;AACD;AAIO,MAAM,sBAAsB,IAAI,yBAAyB;",
  "names": []
}
