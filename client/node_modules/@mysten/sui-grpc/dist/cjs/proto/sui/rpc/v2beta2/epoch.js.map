{
  "version": 3,
  "sources": ["../../../../../../src/proto/sui/rpc/v2beta2/epoch.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\nimport type { BinaryWriteOptions } from '@protobuf-ts/runtime';\nimport type { IBinaryWriter } from '@protobuf-ts/runtime';\nimport { WireType } from '@protobuf-ts/runtime';\nimport type { BinaryReadOptions } from '@protobuf-ts/runtime';\nimport type { IBinaryReader } from '@protobuf-ts/runtime';\nimport { UnknownFieldHandler } from '@protobuf-ts/runtime';\nimport type { PartialMessage } from '@protobuf-ts/runtime';\nimport { reflectionMergePartial } from '@protobuf-ts/runtime';\nimport { MessageType } from '@protobuf-ts/runtime';\nimport { ProtocolConfig } from './protocol_config.js';\nimport { Timestamp } from '../../../google/protobuf/timestamp.js';\nimport { SystemState } from './system_state.js';\nimport { ValidatorCommittee } from './signature.js';\n/**\n * @generated from protobuf message sui.rpc.v2beta2.Epoch\n */\nexport interface Epoch {\n\t/**\n\t * @generated from protobuf field: optional uint64 epoch = 1\n\t */\n\tepoch?: bigint;\n\t/**\n\t * The committee governing this epoch.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2beta2.ValidatorCommittee committee = 2\n\t */\n\tcommittee?: ValidatorCommittee;\n\t/**\n\t * Snapshot of Sui's SystemState (`0x3::sui_system::SystemState`) at the\n\t * beginning of the epoch, for past epochs, or the current state for the\n\t * current epoch.\n\t *\n\t * @generated from protobuf field: optional sui.rpc.v2beta2.SystemState system_state = 3\n\t */\n\tsystemState?: SystemState;\n\t/**\n\t * @generated from protobuf field: optional uint64 first_checkpoint = 4\n\t */\n\tfirstCheckpoint?: bigint;\n\t/**\n\t * @generated from protobuf field: optional uint64 last_checkpoint = 5\n\t */\n\tlastCheckpoint?: bigint;\n\t/**\n\t * @generated from protobuf field: optional google.protobuf.Timestamp start = 6\n\t */\n\tstart?: Timestamp;\n\t/**\n\t * @generated from protobuf field: optional google.protobuf.Timestamp end = 7\n\t */\n\tend?: Timestamp;\n\t/**\n\t * Reference gas price denominated in MIST\n\t *\n\t * @generated from protobuf field: optional uint64 reference_gas_price = 8\n\t */\n\treferenceGasPrice?: bigint;\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2beta2.ProtocolConfig protocol_config = 9\n\t */\n\tprotocolConfig?: ProtocolConfig;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass Epoch$Type extends MessageType<Epoch> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2beta2.Epoch', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'epoch',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 2, name: 'committee', kind: 'message', T: () => ValidatorCommittee },\n\t\t\t{ no: 3, name: 'system_state', kind: 'message', T: () => SystemState },\n\t\t\t{\n\t\t\t\tno: 4,\n\t\t\t\tname: 'first_checkpoint',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 5,\n\t\t\t\tname: 'last_checkpoint',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 6, name: 'start', kind: 'message', T: () => Timestamp },\n\t\t\t{ no: 7, name: 'end', kind: 'message', T: () => Timestamp },\n\t\t\t{\n\t\t\t\tno: 8,\n\t\t\t\tname: 'reference_gas_price',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 9, name: 'protocol_config', kind: 'message', T: () => ProtocolConfig },\n\t\t]);\n\t}\n\tcreate(value?: PartialMessage<Epoch>): Epoch {\n\t\tconst message = globalThis.Object.create(this.messagePrototype!);\n\t\tif (value !== undefined) reflectionMergePartial<Epoch>(this, message, value);\n\t\treturn message;\n\t}\n\tinternalBinaryRead(\n\t\treader: IBinaryReader,\n\t\tlength: number,\n\t\toptions: BinaryReadOptions,\n\t\ttarget?: Epoch,\n\t): Epoch {\n\t\tlet message = target ?? this.create(),\n\t\t\tend = reader.pos + length;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tcase /* optional uint64 epoch */ 1:\n\t\t\t\t\tmessage.epoch = reader.uint64().toBigInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional sui.rpc.v2beta2.ValidatorCommittee committee */ 2:\n\t\t\t\t\tmessage.committee = ValidatorCommittee.internalBinaryRead(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmessage.committee,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional sui.rpc.v2beta2.SystemState system_state */ 3:\n\t\t\t\t\tmessage.systemState = SystemState.internalBinaryRead(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmessage.systemState,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional uint64 first_checkpoint */ 4:\n\t\t\t\t\tmessage.firstCheckpoint = reader.uint64().toBigInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional uint64 last_checkpoint */ 5:\n\t\t\t\t\tmessage.lastCheckpoint = reader.uint64().toBigInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional google.protobuf.Timestamp start */ 6:\n\t\t\t\t\tmessage.start = Timestamp.internalBinaryRead(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmessage.start,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional google.protobuf.Timestamp end */ 7:\n\t\t\t\t\tmessage.end = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.end);\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional uint64 reference_gas_price */ 8:\n\t\t\t\t\tmessage.referenceGasPrice = reader.uint64().toBigInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional sui.rpc.v2beta2.ProtocolConfig protocol_config */ 9:\n\t\t\t\t\tmessage.protocolConfig = ProtocolConfig.internalBinaryRead(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmessage.protocolConfig,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet u = options.readUnknownField;\n\t\t\t\t\tif (u === 'throw')\n\t\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t\t`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,\n\t\t\t\t\t\t);\n\t\t\t\t\tlet d = reader.skip(wireType);\n\t\t\t\t\tif (u !== false)\n\t\t\t\t\t\t(u === true ? UnknownFieldHandler.onRead : u)(\n\t\t\t\t\t\t\tthis.typeName,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tfieldNo,\n\t\t\t\t\t\t\twireType,\n\t\t\t\t\t\t\td,\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\tinternalBinaryWrite(\n\t\tmessage: Epoch,\n\t\twriter: IBinaryWriter,\n\t\toptions: BinaryWriteOptions,\n\t): IBinaryWriter {\n\t\t/* optional uint64 epoch = 1; */\n\t\tif (message.epoch !== undefined) writer.tag(1, WireType.Varint).uint64(message.epoch);\n\t\t/* optional sui.rpc.v2beta2.ValidatorCommittee committee = 2; */\n\t\tif (message.committee)\n\t\t\tValidatorCommittee.internalBinaryWrite(\n\t\t\t\tmessage.committee,\n\t\t\t\twriter.tag(2, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\t/* optional sui.rpc.v2beta2.SystemState system_state = 3; */\n\t\tif (message.systemState)\n\t\t\tSystemState.internalBinaryWrite(\n\t\t\t\tmessage.systemState,\n\t\t\t\twriter.tag(3, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\t/* optional uint64 first_checkpoint = 4; */\n\t\tif (message.firstCheckpoint !== undefined)\n\t\t\twriter.tag(4, WireType.Varint).uint64(message.firstCheckpoint);\n\t\t/* optional uint64 last_checkpoint = 5; */\n\t\tif (message.lastCheckpoint !== undefined)\n\t\t\twriter.tag(5, WireType.Varint).uint64(message.lastCheckpoint);\n\t\t/* optional google.protobuf.Timestamp start = 6; */\n\t\tif (message.start)\n\t\t\tTimestamp.internalBinaryWrite(\n\t\t\t\tmessage.start,\n\t\t\t\twriter.tag(6, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\t/* optional google.protobuf.Timestamp end = 7; */\n\t\tif (message.end)\n\t\t\tTimestamp.internalBinaryWrite(\n\t\t\t\tmessage.end,\n\t\t\t\twriter.tag(7, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\t/* optional uint64 reference_gas_price = 8; */\n\t\tif (message.referenceGasPrice !== undefined)\n\t\t\twriter.tag(8, WireType.Varint).uint64(message.referenceGasPrice);\n\t\t/* optional sui.rpc.v2beta2.ProtocolConfig protocol_config = 9; */\n\t\tif (message.protocolConfig)\n\t\t\tProtocolConfig.internalBinaryWrite(\n\t\t\t\tmessage.protocolConfig,\n\t\t\t\twriter.tag(9, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\tlet u = options.writeUnknownFields;\n\t\tif (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n\t\treturn writer;\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2beta2.Epoch\n */\nexport const Epoch = new Epoch$Type();\n"],
  "mappings": "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",
  "names": ["import_runtime"]
}
