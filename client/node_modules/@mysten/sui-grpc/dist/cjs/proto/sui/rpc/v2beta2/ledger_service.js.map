{
  "version": 3,
  "sources": ["../../../../../../src/proto/sui/rpc/v2beta2/ledger_service.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\nimport { ServiceType } from '@protobuf-ts/runtime-rpc';\nimport { WireType } from '@protobuf-ts/runtime';\nimport type { BinaryWriteOptions } from '@protobuf-ts/runtime';\nimport type { IBinaryWriter } from '@protobuf-ts/runtime';\nimport type { BinaryReadOptions } from '@protobuf-ts/runtime';\nimport type { IBinaryReader } from '@protobuf-ts/runtime';\nimport { UnknownFieldHandler } from '@protobuf-ts/runtime';\nimport type { PartialMessage } from '@protobuf-ts/runtime';\nimport { reflectionMergePartial } from '@protobuf-ts/runtime';\nimport { MessageType } from '@protobuf-ts/runtime';\nimport { Epoch } from './epoch.js';\nimport { Checkpoint } from './checkpoint.js';\nimport { ExecutedTransaction } from './executed_transaction.js';\nimport { Status } from '../../../google/rpc/status.js';\nimport { Object } from './object.js';\nimport { FieldMask } from '../../../google/protobuf/field_mask.js';\nimport { Timestamp } from '../../../google/protobuf/timestamp.js';\n/**\n * @generated from protobuf message sui.rpc.v2beta2.GetServiceInfoRequest\n */\nexport interface GetServiceInfoRequest {}\n/**\n * @generated from protobuf message sui.rpc.v2beta2.GetServiceInfoResponse\n */\nexport interface GetServiceInfoResponse {\n\t/**\n\t * The chain identifier of the chain that this node is on.\n\t *\n\t * The chain identifier is the digest of the genesis checkpoint, the\n\t * checkpoint with sequence number 0.\n\t *\n\t * @generated from protobuf field: optional string chain_id = 1\n\t */\n\tchainId?: string;\n\t/**\n\t * Human-readable name of the chain that this node is on.\n\t *\n\t * This is intended to be a human-readable name like `mainnet`, `testnet`, and so on.\n\t *\n\t * @generated from protobuf field: optional string chain = 2\n\t */\n\tchain?: string;\n\t/**\n\t * Current epoch of the node based on its highest executed checkpoint.\n\t *\n\t * @generated from protobuf field: optional uint64 epoch = 3\n\t */\n\tepoch?: bigint;\n\t/**\n\t * Checkpoint height of the most recently executed checkpoint.\n\t *\n\t * @generated from protobuf field: optional uint64 checkpoint_height = 4\n\t */\n\tcheckpointHeight?: bigint;\n\t/**\n\t * Unix timestamp of the most recently executed checkpoint.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.Timestamp timestamp = 5\n\t */\n\ttimestamp?: Timestamp;\n\t/**\n\t * The lowest checkpoint for which checkpoints and transaction data are available.\n\t *\n\t * @generated from protobuf field: optional uint64 lowest_available_checkpoint = 6\n\t */\n\tlowestAvailableCheckpoint?: bigint;\n\t/**\n\t * The lowest checkpoint for which object data is available.\n\t *\n\t * @generated from protobuf field: optional uint64 lowest_available_checkpoint_objects = 7\n\t */\n\tlowestAvailableCheckpointObjects?: bigint;\n\t/**\n\t * Software version of the service. Similar to the `server` http header.\n\t *\n\t * @generated from protobuf field: optional string server = 8\n\t */\n\tserver?: string;\n}\n/**\n * @generated from protobuf message sui.rpc.v2beta2.GetObjectRequest\n */\nexport interface GetObjectRequest {\n\t/**\n\t * Required. The `ObjectId` of the requested object.\n\t *\n\t * @generated from protobuf field: optional string object_id = 1\n\t */\n\tobjectId?: string;\n\t/**\n\t * Request a specific version of the object.\n\t * If no version is specified, and the object is live, then the latest\n\t * version of the object is returned.\n\t *\n\t * @generated from protobuf field: optional uint64 version = 2\n\t */\n\tversion?: bigint;\n\t/**\n\t * Mask specifying which fields to read.\n\t * If no mask is specified, defaults to `object_id,version,digest`.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.FieldMask read_mask = 3\n\t */\n\treadMask?: FieldMask;\n}\n/**\n * @generated from protobuf message sui.rpc.v2beta2.GetObjectResponse\n */\nexport interface GetObjectResponse {\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2beta2.Object object = 1\n\t */\n\tobject?: Object;\n}\n/**\n * @generated from protobuf message sui.rpc.v2beta2.BatchGetObjectsRequest\n */\nexport interface BatchGetObjectsRequest {\n\t/**\n\t * @generated from protobuf field: repeated sui.rpc.v2beta2.GetObjectRequest requests = 1\n\t */\n\trequests: GetObjectRequest[];\n\t/**\n\t * Mask specifying which fields to read.\n\t * If no mask is specified, defaults to `object_id,version,digest`.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.FieldMask read_mask = 2\n\t */\n\treadMask?: FieldMask;\n}\n/**\n * @generated from protobuf message sui.rpc.v2beta2.BatchGetObjectsResponse\n */\nexport interface BatchGetObjectsResponse {\n\t/**\n\t * @generated from protobuf field: repeated sui.rpc.v2beta2.GetObjectResult objects = 1\n\t */\n\tobjects: GetObjectResult[];\n}\n/**\n * @generated from protobuf message sui.rpc.v2beta2.GetObjectResult\n */\nexport interface GetObjectResult {\n\t/**\n\t * @generated from protobuf oneof: result\n\t */\n\tresult:\n\t\t| {\n\t\t\t\toneofKind: 'object';\n\t\t\t\t/**\n\t\t\t\t * @generated from protobuf field: sui.rpc.v2beta2.Object object = 1\n\t\t\t\t */\n\t\t\t\tobject: Object;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: 'error';\n\t\t\t\t/**\n\t\t\t\t * @generated from protobuf field: google.rpc.Status error = 2\n\t\t\t\t */\n\t\t\t\terror: Status;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: undefined;\n\t\t  };\n}\n/**\n * @generated from protobuf message sui.rpc.v2beta2.GetTransactionRequest\n */\nexport interface GetTransactionRequest {\n\t/**\n\t * Required. The digest of the requested transaction.\n\t *\n\t * @generated from protobuf field: optional string digest = 1\n\t */\n\tdigest?: string;\n\t/**\n\t * Mask specifying which fields to read.\n\t * If no mask is specified, defaults to `digest`.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.FieldMask read_mask = 2\n\t */\n\treadMask?: FieldMask;\n}\n/**\n * @generated from protobuf message sui.rpc.v2beta2.GetTransactionResponse\n */\nexport interface GetTransactionResponse {\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2beta2.ExecutedTransaction transaction = 1\n\t */\n\ttransaction?: ExecutedTransaction;\n}\n/**\n * @generated from protobuf message sui.rpc.v2beta2.BatchGetTransactionsRequest\n */\nexport interface BatchGetTransactionsRequest {\n\t/**\n\t * Required. The digests of the requested transactions.\n\t *\n\t * @generated from protobuf field: repeated string digests = 1\n\t */\n\tdigests: string[];\n\t/**\n\t * Mask specifying which fields to read.\n\t * If no mask is specified, defaults to `object_id,version,digest`.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.FieldMask read_mask = 2\n\t */\n\treadMask?: FieldMask;\n}\n/**\n * @generated from protobuf message sui.rpc.v2beta2.BatchGetTransactionsResponse\n */\nexport interface BatchGetTransactionsResponse {\n\t/**\n\t * @generated from protobuf field: repeated sui.rpc.v2beta2.GetTransactionResult transactions = 1\n\t */\n\ttransactions: GetTransactionResult[];\n}\n/**\n * @generated from protobuf message sui.rpc.v2beta2.GetTransactionResult\n */\nexport interface GetTransactionResult {\n\t/**\n\t * @generated from protobuf oneof: result\n\t */\n\tresult:\n\t\t| {\n\t\t\t\toneofKind: 'transaction';\n\t\t\t\t/**\n\t\t\t\t * @generated from protobuf field: sui.rpc.v2beta2.ExecutedTransaction transaction = 1\n\t\t\t\t */\n\t\t\t\ttransaction: ExecutedTransaction;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: 'error';\n\t\t\t\t/**\n\t\t\t\t * @generated from protobuf field: google.rpc.Status error = 2\n\t\t\t\t */\n\t\t\t\terror: Status;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: undefined;\n\t\t  };\n}\n/**\n * @generated from protobuf message sui.rpc.v2beta2.GetCheckpointRequest\n */\nexport interface GetCheckpointRequest {\n\t/**\n\t * If neither is provided, return the latest\n\t *\n\t * @generated from protobuf oneof: checkpoint_id\n\t */\n\tcheckpointId:\n\t\t| {\n\t\t\t\toneofKind: 'sequenceNumber';\n\t\t\t\t/**\n\t\t\t\t * The sequence number of the requested checkpoint.\n\t\t\t\t *\n\t\t\t\t * @generated from protobuf field: uint64 sequence_number = 1\n\t\t\t\t */\n\t\t\t\tsequenceNumber: bigint;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: 'digest';\n\t\t\t\t/**\n\t\t\t\t * The digest of the requested checkpoint.\n\t\t\t\t *\n\t\t\t\t * @generated from protobuf field: string digest = 2\n\t\t\t\t */\n\t\t\t\tdigest: string;\n\t\t  }\n\t\t| {\n\t\t\t\toneofKind: undefined;\n\t\t  };\n\t/**\n\t * Mask specifying which fields to read.\n\t * If no mask is specified, defaults to `object_id,version,digest`.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.FieldMask read_mask = 3\n\t */\n\treadMask?: FieldMask;\n}\n/**\n * @generated from protobuf message sui.rpc.v2beta2.GetCheckpointResponse\n */\nexport interface GetCheckpointResponse {\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2beta2.Checkpoint checkpoint = 1\n\t */\n\tcheckpoint?: Checkpoint;\n}\n/**\n * @generated from protobuf message sui.rpc.v2beta2.GetEpochRequest\n */\nexport interface GetEpochRequest {\n\t/**\n\t * The requested epoch.\n\t * If no epoch is provided the current epoch will be returned.\n\t *\n\t * @generated from protobuf field: optional uint64 epoch = 1\n\t */\n\tepoch?: bigint;\n\t/**\n\t * Mask specifying which fields to read.\n\t * If no mask is specified, defaults to `epoch`.\n\t *\n\t * @generated from protobuf field: optional google.protobuf.FieldMask read_mask = 2\n\t */\n\treadMask?: FieldMask;\n}\n/**\n * @generated from protobuf message sui.rpc.v2beta2.GetEpochResponse\n */\nexport interface GetEpochResponse {\n\t/**\n\t * @generated from protobuf field: optional sui.rpc.v2beta2.Epoch epoch = 1\n\t */\n\tepoch?: Epoch;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetServiceInfoRequest$Type extends MessageType<GetServiceInfoRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2beta2.GetServiceInfoRequest', []);\n\t}\n\tcreate(value?: PartialMessage<GetServiceInfoRequest>): GetServiceInfoRequest {\n\t\tconst message = globalThis.Object.create(this.messagePrototype!);\n\t\tif (value !== undefined) reflectionMergePartial<GetServiceInfoRequest>(this, message, value);\n\t\treturn message;\n\t}\n\tinternalBinaryRead(\n\t\treader: IBinaryReader,\n\t\tlength: number,\n\t\toptions: BinaryReadOptions,\n\t\ttarget?: GetServiceInfoRequest,\n\t): GetServiceInfoRequest {\n\t\tlet message = target ?? this.create(),\n\t\t\tend = reader.pos + length;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tdefault:\n\t\t\t\t\tlet u = options.readUnknownField;\n\t\t\t\t\tif (u === 'throw')\n\t\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t\t`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,\n\t\t\t\t\t\t);\n\t\t\t\t\tlet d = reader.skip(wireType);\n\t\t\t\t\tif (u !== false)\n\t\t\t\t\t\t(u === true ? UnknownFieldHandler.onRead : u)(\n\t\t\t\t\t\t\tthis.typeName,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tfieldNo,\n\t\t\t\t\t\t\twireType,\n\t\t\t\t\t\t\td,\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\tinternalBinaryWrite(\n\t\tmessage: GetServiceInfoRequest,\n\t\twriter: IBinaryWriter,\n\t\toptions: BinaryWriteOptions,\n\t): IBinaryWriter {\n\t\tlet u = options.writeUnknownFields;\n\t\tif (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n\t\treturn writer;\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2beta2.GetServiceInfoRequest\n */\nexport const GetServiceInfoRequest = new GetServiceInfoRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetServiceInfoResponse$Type extends MessageType<GetServiceInfoResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2beta2.GetServiceInfoResponse', [\n\t\t\t{ no: 1, name: 'chain_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'chain', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'epoch',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 4,\n\t\t\t\tname: 'checkpoint_height',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 5, name: 'timestamp', kind: 'message', T: () => Timestamp },\n\t\t\t{\n\t\t\t\tno: 6,\n\t\t\t\tname: 'lowest_available_checkpoint',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 7,\n\t\t\t\tname: 'lowest_available_checkpoint_objects',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 8, name: 'server', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t]);\n\t}\n\tcreate(value?: PartialMessage<GetServiceInfoResponse>): GetServiceInfoResponse {\n\t\tconst message = globalThis.Object.create(this.messagePrototype!);\n\t\tif (value !== undefined) reflectionMergePartial<GetServiceInfoResponse>(this, message, value);\n\t\treturn message;\n\t}\n\tinternalBinaryRead(\n\t\treader: IBinaryReader,\n\t\tlength: number,\n\t\toptions: BinaryReadOptions,\n\t\ttarget?: GetServiceInfoResponse,\n\t): GetServiceInfoResponse {\n\t\tlet message = target ?? this.create(),\n\t\t\tend = reader.pos + length;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tcase /* optional string chain_id */ 1:\n\t\t\t\t\tmessage.chainId = reader.string();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional string chain */ 2:\n\t\t\t\t\tmessage.chain = reader.string();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional uint64 epoch */ 3:\n\t\t\t\t\tmessage.epoch = reader.uint64().toBigInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional uint64 checkpoint_height */ 4:\n\t\t\t\t\tmessage.checkpointHeight = reader.uint64().toBigInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional google.protobuf.Timestamp timestamp */ 5:\n\t\t\t\t\tmessage.timestamp = Timestamp.internalBinaryRead(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmessage.timestamp,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional uint64 lowest_available_checkpoint */ 6:\n\t\t\t\t\tmessage.lowestAvailableCheckpoint = reader.uint64().toBigInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional uint64 lowest_available_checkpoint_objects */ 7:\n\t\t\t\t\tmessage.lowestAvailableCheckpointObjects = reader.uint64().toBigInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional string server */ 8:\n\t\t\t\t\tmessage.server = reader.string();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet u = options.readUnknownField;\n\t\t\t\t\tif (u === 'throw')\n\t\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t\t`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,\n\t\t\t\t\t\t);\n\t\t\t\t\tlet d = reader.skip(wireType);\n\t\t\t\t\tif (u !== false)\n\t\t\t\t\t\t(u === true ? UnknownFieldHandler.onRead : u)(\n\t\t\t\t\t\t\tthis.typeName,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tfieldNo,\n\t\t\t\t\t\t\twireType,\n\t\t\t\t\t\t\td,\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\tinternalBinaryWrite(\n\t\tmessage: GetServiceInfoResponse,\n\t\twriter: IBinaryWriter,\n\t\toptions: BinaryWriteOptions,\n\t): IBinaryWriter {\n\t\t/* optional string chain_id = 1; */\n\t\tif (message.chainId !== undefined)\n\t\t\twriter.tag(1, WireType.LengthDelimited).string(message.chainId);\n\t\t/* optional string chain = 2; */\n\t\tif (message.chain !== undefined) writer.tag(2, WireType.LengthDelimited).string(message.chain);\n\t\t/* optional uint64 epoch = 3; */\n\t\tif (message.epoch !== undefined) writer.tag(3, WireType.Varint).uint64(message.epoch);\n\t\t/* optional uint64 checkpoint_height = 4; */\n\t\tif (message.checkpointHeight !== undefined)\n\t\t\twriter.tag(4, WireType.Varint).uint64(message.checkpointHeight);\n\t\t/* optional google.protobuf.Timestamp timestamp = 5; */\n\t\tif (message.timestamp)\n\t\t\tTimestamp.internalBinaryWrite(\n\t\t\t\tmessage.timestamp,\n\t\t\t\twriter.tag(5, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\t/* optional uint64 lowest_available_checkpoint = 6; */\n\t\tif (message.lowestAvailableCheckpoint !== undefined)\n\t\t\twriter.tag(6, WireType.Varint).uint64(message.lowestAvailableCheckpoint);\n\t\t/* optional uint64 lowest_available_checkpoint_objects = 7; */\n\t\tif (message.lowestAvailableCheckpointObjects !== undefined)\n\t\t\twriter.tag(7, WireType.Varint).uint64(message.lowestAvailableCheckpointObjects);\n\t\t/* optional string server = 8; */\n\t\tif (message.server !== undefined)\n\t\t\twriter.tag(8, WireType.LengthDelimited).string(message.server);\n\t\tlet u = options.writeUnknownFields;\n\t\tif (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n\t\treturn writer;\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2beta2.GetServiceInfoResponse\n */\nexport const GetServiceInfoResponse = new GetServiceInfoResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetObjectRequest$Type extends MessageType<GetObjectRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2beta2.GetObjectRequest', [\n\t\t\t{ no: 1, name: 'object_id', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'version',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 3, name: 'read_mask', kind: 'message', T: () => FieldMask },\n\t\t]);\n\t}\n\tcreate(value?: PartialMessage<GetObjectRequest>): GetObjectRequest {\n\t\tconst message = globalThis.Object.create(this.messagePrototype!);\n\t\tif (value !== undefined) reflectionMergePartial<GetObjectRequest>(this, message, value);\n\t\treturn message;\n\t}\n\tinternalBinaryRead(\n\t\treader: IBinaryReader,\n\t\tlength: number,\n\t\toptions: BinaryReadOptions,\n\t\ttarget?: GetObjectRequest,\n\t): GetObjectRequest {\n\t\tlet message = target ?? this.create(),\n\t\t\tend = reader.pos + length;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tcase /* optional string object_id */ 1:\n\t\t\t\t\tmessage.objectId = reader.string();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional uint64 version */ 2:\n\t\t\t\t\tmessage.version = reader.uint64().toBigInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional google.protobuf.FieldMask read_mask */ 3:\n\t\t\t\t\tmessage.readMask = FieldMask.internalBinaryRead(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmessage.readMask,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet u = options.readUnknownField;\n\t\t\t\t\tif (u === 'throw')\n\t\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t\t`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,\n\t\t\t\t\t\t);\n\t\t\t\t\tlet d = reader.skip(wireType);\n\t\t\t\t\tif (u !== false)\n\t\t\t\t\t\t(u === true ? UnknownFieldHandler.onRead : u)(\n\t\t\t\t\t\t\tthis.typeName,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tfieldNo,\n\t\t\t\t\t\t\twireType,\n\t\t\t\t\t\t\td,\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\tinternalBinaryWrite(\n\t\tmessage: GetObjectRequest,\n\t\twriter: IBinaryWriter,\n\t\toptions: BinaryWriteOptions,\n\t): IBinaryWriter {\n\t\t/* optional string object_id = 1; */\n\t\tif (message.objectId !== undefined)\n\t\t\twriter.tag(1, WireType.LengthDelimited).string(message.objectId);\n\t\t/* optional uint64 version = 2; */\n\t\tif (message.version !== undefined) writer.tag(2, WireType.Varint).uint64(message.version);\n\t\t/* optional google.protobuf.FieldMask read_mask = 3; */\n\t\tif (message.readMask)\n\t\t\tFieldMask.internalBinaryWrite(\n\t\t\t\tmessage.readMask,\n\t\t\t\twriter.tag(3, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\tlet u = options.writeUnknownFields;\n\t\tif (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n\t\treturn writer;\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2beta2.GetObjectRequest\n */\nexport const GetObjectRequest = new GetObjectRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetObjectResponse$Type extends MessageType<GetObjectResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2beta2.GetObjectResponse', [\n\t\t\t{ no: 1, name: 'object', kind: 'message', T: () => Object },\n\t\t]);\n\t}\n\tcreate(value?: PartialMessage<GetObjectResponse>): GetObjectResponse {\n\t\tconst message = globalThis.Object.create(this.messagePrototype!);\n\t\tif (value !== undefined) reflectionMergePartial<GetObjectResponse>(this, message, value);\n\t\treturn message;\n\t}\n\tinternalBinaryRead(\n\t\treader: IBinaryReader,\n\t\tlength: number,\n\t\toptions: BinaryReadOptions,\n\t\ttarget?: GetObjectResponse,\n\t): GetObjectResponse {\n\t\tlet message = target ?? this.create(),\n\t\t\tend = reader.pos + length;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tcase /* optional sui.rpc.v2beta2.Object object */ 1:\n\t\t\t\t\tmessage.object = Object.internalBinaryRead(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmessage.object,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet u = options.readUnknownField;\n\t\t\t\t\tif (u === 'throw')\n\t\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t\t`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,\n\t\t\t\t\t\t);\n\t\t\t\t\tlet d = reader.skip(wireType);\n\t\t\t\t\tif (u !== false)\n\t\t\t\t\t\t(u === true ? UnknownFieldHandler.onRead : u)(\n\t\t\t\t\t\t\tthis.typeName,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tfieldNo,\n\t\t\t\t\t\t\twireType,\n\t\t\t\t\t\t\td,\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\tinternalBinaryWrite(\n\t\tmessage: GetObjectResponse,\n\t\twriter: IBinaryWriter,\n\t\toptions: BinaryWriteOptions,\n\t): IBinaryWriter {\n\t\t/* optional sui.rpc.v2beta2.Object object = 1; */\n\t\tif (message.object)\n\t\t\tObject.internalBinaryWrite(\n\t\t\t\tmessage.object,\n\t\t\t\twriter.tag(1, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\tlet u = options.writeUnknownFields;\n\t\tif (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n\t\treturn writer;\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2beta2.GetObjectResponse\n */\nexport const GetObjectResponse = new GetObjectResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass BatchGetObjectsRequest$Type extends MessageType<BatchGetObjectsRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2beta2.BatchGetObjectsRequest', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'requests',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 2 /*RepeatType.UNPACKED*/,\n\t\t\t\tT: () => GetObjectRequest,\n\t\t\t},\n\t\t\t{ no: 2, name: 'read_mask', kind: 'message', T: () => FieldMask },\n\t\t]);\n\t}\n\tcreate(value?: PartialMessage<BatchGetObjectsRequest>): BatchGetObjectsRequest {\n\t\tconst message = globalThis.Object.create(this.messagePrototype!);\n\t\tmessage.requests = [];\n\t\tif (value !== undefined) reflectionMergePartial<BatchGetObjectsRequest>(this, message, value);\n\t\treturn message;\n\t}\n\tinternalBinaryRead(\n\t\treader: IBinaryReader,\n\t\tlength: number,\n\t\toptions: BinaryReadOptions,\n\t\ttarget?: BatchGetObjectsRequest,\n\t): BatchGetObjectsRequest {\n\t\tlet message = target ?? this.create(),\n\t\t\tend = reader.pos + length;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tcase /* repeated sui.rpc.v2beta2.GetObjectRequest requests */ 1:\n\t\t\t\t\tmessage.requests.push(\n\t\t\t\t\t\tGetObjectRequest.internalBinaryRead(reader, reader.uint32(), options),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional google.protobuf.FieldMask read_mask */ 2:\n\t\t\t\t\tmessage.readMask = FieldMask.internalBinaryRead(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmessage.readMask,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet u = options.readUnknownField;\n\t\t\t\t\tif (u === 'throw')\n\t\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t\t`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,\n\t\t\t\t\t\t);\n\t\t\t\t\tlet d = reader.skip(wireType);\n\t\t\t\t\tif (u !== false)\n\t\t\t\t\t\t(u === true ? UnknownFieldHandler.onRead : u)(\n\t\t\t\t\t\t\tthis.typeName,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tfieldNo,\n\t\t\t\t\t\t\twireType,\n\t\t\t\t\t\t\td,\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\tinternalBinaryWrite(\n\t\tmessage: BatchGetObjectsRequest,\n\t\twriter: IBinaryWriter,\n\t\toptions: BinaryWriteOptions,\n\t): IBinaryWriter {\n\t\t/* repeated sui.rpc.v2beta2.GetObjectRequest requests = 1; */\n\t\tfor (let i = 0; i < message.requests.length; i++)\n\t\t\tGetObjectRequest.internalBinaryWrite(\n\t\t\t\tmessage.requests[i],\n\t\t\t\twriter.tag(1, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\t/* optional google.protobuf.FieldMask read_mask = 2; */\n\t\tif (message.readMask)\n\t\t\tFieldMask.internalBinaryWrite(\n\t\t\t\tmessage.readMask,\n\t\t\t\twriter.tag(2, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\tlet u = options.writeUnknownFields;\n\t\tif (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n\t\treturn writer;\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2beta2.BatchGetObjectsRequest\n */\nexport const BatchGetObjectsRequest = new BatchGetObjectsRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass BatchGetObjectsResponse$Type extends MessageType<BatchGetObjectsResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2beta2.BatchGetObjectsResponse', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'objects',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 2 /*RepeatType.UNPACKED*/,\n\t\t\t\tT: () => GetObjectResult,\n\t\t\t},\n\t\t]);\n\t}\n\tcreate(value?: PartialMessage<BatchGetObjectsResponse>): BatchGetObjectsResponse {\n\t\tconst message = globalThis.Object.create(this.messagePrototype!);\n\t\tmessage.objects = [];\n\t\tif (value !== undefined) reflectionMergePartial<BatchGetObjectsResponse>(this, message, value);\n\t\treturn message;\n\t}\n\tinternalBinaryRead(\n\t\treader: IBinaryReader,\n\t\tlength: number,\n\t\toptions: BinaryReadOptions,\n\t\ttarget?: BatchGetObjectsResponse,\n\t): BatchGetObjectsResponse {\n\t\tlet message = target ?? this.create(),\n\t\t\tend = reader.pos + length;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tcase /* repeated sui.rpc.v2beta2.GetObjectResult objects */ 1:\n\t\t\t\t\tmessage.objects.push(\n\t\t\t\t\t\tGetObjectResult.internalBinaryRead(reader, reader.uint32(), options),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet u = options.readUnknownField;\n\t\t\t\t\tif (u === 'throw')\n\t\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t\t`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,\n\t\t\t\t\t\t);\n\t\t\t\t\tlet d = reader.skip(wireType);\n\t\t\t\t\tif (u !== false)\n\t\t\t\t\t\t(u === true ? UnknownFieldHandler.onRead : u)(\n\t\t\t\t\t\t\tthis.typeName,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tfieldNo,\n\t\t\t\t\t\t\twireType,\n\t\t\t\t\t\t\td,\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\tinternalBinaryWrite(\n\t\tmessage: BatchGetObjectsResponse,\n\t\twriter: IBinaryWriter,\n\t\toptions: BinaryWriteOptions,\n\t): IBinaryWriter {\n\t\t/* repeated sui.rpc.v2beta2.GetObjectResult objects = 1; */\n\t\tfor (let i = 0; i < message.objects.length; i++)\n\t\t\tGetObjectResult.internalBinaryWrite(\n\t\t\t\tmessage.objects[i],\n\t\t\t\twriter.tag(1, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\tlet u = options.writeUnknownFields;\n\t\tif (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n\t\treturn writer;\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2beta2.BatchGetObjectsResponse\n */\nexport const BatchGetObjectsResponse = new BatchGetObjectsResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetObjectResult$Type extends MessageType<GetObjectResult> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2beta2.GetObjectResult', [\n\t\t\t{ no: 1, name: 'object', kind: 'message', oneof: 'result', T: () => Object },\n\t\t\t{ no: 2, name: 'error', kind: 'message', oneof: 'result', T: () => Status },\n\t\t]);\n\t}\n\tcreate(value?: PartialMessage<GetObjectResult>): GetObjectResult {\n\t\tconst message = globalThis.Object.create(this.messagePrototype!);\n\t\tmessage.result = { oneofKind: undefined };\n\t\tif (value !== undefined) reflectionMergePartial<GetObjectResult>(this, message, value);\n\t\treturn message;\n\t}\n\tinternalBinaryRead(\n\t\treader: IBinaryReader,\n\t\tlength: number,\n\t\toptions: BinaryReadOptions,\n\t\ttarget?: GetObjectResult,\n\t): GetObjectResult {\n\t\tlet message = target ?? this.create(),\n\t\t\tend = reader.pos + length;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tcase /* sui.rpc.v2beta2.Object object */ 1:\n\t\t\t\t\tmessage.result = {\n\t\t\t\t\t\toneofKind: 'object',\n\t\t\t\t\t\tobject: Object.internalBinaryRead(\n\t\t\t\t\t\t\treader,\n\t\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t(message.result as any).object,\n\t\t\t\t\t\t),\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* google.rpc.Status error */ 2:\n\t\t\t\t\tmessage.result = {\n\t\t\t\t\t\toneofKind: 'error',\n\t\t\t\t\t\terror: Status.internalBinaryRead(\n\t\t\t\t\t\t\treader,\n\t\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t(message.result as any).error,\n\t\t\t\t\t\t),\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet u = options.readUnknownField;\n\t\t\t\t\tif (u === 'throw')\n\t\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t\t`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,\n\t\t\t\t\t\t);\n\t\t\t\t\tlet d = reader.skip(wireType);\n\t\t\t\t\tif (u !== false)\n\t\t\t\t\t\t(u === true ? UnknownFieldHandler.onRead : u)(\n\t\t\t\t\t\t\tthis.typeName,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tfieldNo,\n\t\t\t\t\t\t\twireType,\n\t\t\t\t\t\t\td,\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\tinternalBinaryWrite(\n\t\tmessage: GetObjectResult,\n\t\twriter: IBinaryWriter,\n\t\toptions: BinaryWriteOptions,\n\t): IBinaryWriter {\n\t\t/* sui.rpc.v2beta2.Object object = 1; */\n\t\tif (message.result.oneofKind === 'object')\n\t\t\tObject.internalBinaryWrite(\n\t\t\t\tmessage.result.object,\n\t\t\t\twriter.tag(1, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\t/* google.rpc.Status error = 2; */\n\t\tif (message.result.oneofKind === 'error')\n\t\t\tStatus.internalBinaryWrite(\n\t\t\t\tmessage.result.error,\n\t\t\t\twriter.tag(2, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\tlet u = options.writeUnknownFields;\n\t\tif (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n\t\treturn writer;\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2beta2.GetObjectResult\n */\nexport const GetObjectResult = new GetObjectResult$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetTransactionRequest$Type extends MessageType<GetTransactionRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2beta2.GetTransactionRequest', [\n\t\t\t{ no: 1, name: 'digest', kind: 'scalar', opt: true, T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 2, name: 'read_mask', kind: 'message', T: () => FieldMask },\n\t\t]);\n\t}\n\tcreate(value?: PartialMessage<GetTransactionRequest>): GetTransactionRequest {\n\t\tconst message = globalThis.Object.create(this.messagePrototype!);\n\t\tif (value !== undefined) reflectionMergePartial<GetTransactionRequest>(this, message, value);\n\t\treturn message;\n\t}\n\tinternalBinaryRead(\n\t\treader: IBinaryReader,\n\t\tlength: number,\n\t\toptions: BinaryReadOptions,\n\t\ttarget?: GetTransactionRequest,\n\t): GetTransactionRequest {\n\t\tlet message = target ?? this.create(),\n\t\t\tend = reader.pos + length;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tcase /* optional string digest */ 1:\n\t\t\t\t\tmessage.digest = reader.string();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional google.protobuf.FieldMask read_mask */ 2:\n\t\t\t\t\tmessage.readMask = FieldMask.internalBinaryRead(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmessage.readMask,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet u = options.readUnknownField;\n\t\t\t\t\tif (u === 'throw')\n\t\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t\t`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,\n\t\t\t\t\t\t);\n\t\t\t\t\tlet d = reader.skip(wireType);\n\t\t\t\t\tif (u !== false)\n\t\t\t\t\t\t(u === true ? UnknownFieldHandler.onRead : u)(\n\t\t\t\t\t\t\tthis.typeName,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tfieldNo,\n\t\t\t\t\t\t\twireType,\n\t\t\t\t\t\t\td,\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\tinternalBinaryWrite(\n\t\tmessage: GetTransactionRequest,\n\t\twriter: IBinaryWriter,\n\t\toptions: BinaryWriteOptions,\n\t): IBinaryWriter {\n\t\t/* optional string digest = 1; */\n\t\tif (message.digest !== undefined)\n\t\t\twriter.tag(1, WireType.LengthDelimited).string(message.digest);\n\t\t/* optional google.protobuf.FieldMask read_mask = 2; */\n\t\tif (message.readMask)\n\t\t\tFieldMask.internalBinaryWrite(\n\t\t\t\tmessage.readMask,\n\t\t\t\twriter.tag(2, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\tlet u = options.writeUnknownFields;\n\t\tif (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n\t\treturn writer;\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2beta2.GetTransactionRequest\n */\nexport const GetTransactionRequest = new GetTransactionRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetTransactionResponse$Type extends MessageType<GetTransactionResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2beta2.GetTransactionResponse', [\n\t\t\t{ no: 1, name: 'transaction', kind: 'message', T: () => ExecutedTransaction },\n\t\t]);\n\t}\n\tcreate(value?: PartialMessage<GetTransactionResponse>): GetTransactionResponse {\n\t\tconst message = globalThis.Object.create(this.messagePrototype!);\n\t\tif (value !== undefined) reflectionMergePartial<GetTransactionResponse>(this, message, value);\n\t\treturn message;\n\t}\n\tinternalBinaryRead(\n\t\treader: IBinaryReader,\n\t\tlength: number,\n\t\toptions: BinaryReadOptions,\n\t\ttarget?: GetTransactionResponse,\n\t): GetTransactionResponse {\n\t\tlet message = target ?? this.create(),\n\t\t\tend = reader.pos + length;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tcase /* optional sui.rpc.v2beta2.ExecutedTransaction transaction */ 1:\n\t\t\t\t\tmessage.transaction = ExecutedTransaction.internalBinaryRead(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmessage.transaction,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet u = options.readUnknownField;\n\t\t\t\t\tif (u === 'throw')\n\t\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t\t`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,\n\t\t\t\t\t\t);\n\t\t\t\t\tlet d = reader.skip(wireType);\n\t\t\t\t\tif (u !== false)\n\t\t\t\t\t\t(u === true ? UnknownFieldHandler.onRead : u)(\n\t\t\t\t\t\t\tthis.typeName,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tfieldNo,\n\t\t\t\t\t\t\twireType,\n\t\t\t\t\t\t\td,\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\tinternalBinaryWrite(\n\t\tmessage: GetTransactionResponse,\n\t\twriter: IBinaryWriter,\n\t\toptions: BinaryWriteOptions,\n\t): IBinaryWriter {\n\t\t/* optional sui.rpc.v2beta2.ExecutedTransaction transaction = 1; */\n\t\tif (message.transaction)\n\t\t\tExecutedTransaction.internalBinaryWrite(\n\t\t\t\tmessage.transaction,\n\t\t\t\twriter.tag(1, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\tlet u = options.writeUnknownFields;\n\t\tif (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n\t\treturn writer;\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2beta2.GetTransactionResponse\n */\nexport const GetTransactionResponse = new GetTransactionResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass BatchGetTransactionsRequest$Type extends MessageType<BatchGetTransactionsRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2beta2.BatchGetTransactionsRequest', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'digests',\n\t\t\t\tkind: 'scalar',\n\t\t\t\trepeat: 2 /*RepeatType.UNPACKED*/,\n\t\t\t\tT: 9 /*ScalarType.STRING*/,\n\t\t\t},\n\t\t\t{ no: 2, name: 'read_mask', kind: 'message', T: () => FieldMask },\n\t\t]);\n\t}\n\tcreate(value?: PartialMessage<BatchGetTransactionsRequest>): BatchGetTransactionsRequest {\n\t\tconst message = globalThis.Object.create(this.messagePrototype!);\n\t\tmessage.digests = [];\n\t\tif (value !== undefined)\n\t\t\treflectionMergePartial<BatchGetTransactionsRequest>(this, message, value);\n\t\treturn message;\n\t}\n\tinternalBinaryRead(\n\t\treader: IBinaryReader,\n\t\tlength: number,\n\t\toptions: BinaryReadOptions,\n\t\ttarget?: BatchGetTransactionsRequest,\n\t): BatchGetTransactionsRequest {\n\t\tlet message = target ?? this.create(),\n\t\t\tend = reader.pos + length;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tcase /* repeated string digests */ 1:\n\t\t\t\t\tmessage.digests.push(reader.string());\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional google.protobuf.FieldMask read_mask */ 2:\n\t\t\t\t\tmessage.readMask = FieldMask.internalBinaryRead(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmessage.readMask,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet u = options.readUnknownField;\n\t\t\t\t\tif (u === 'throw')\n\t\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t\t`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,\n\t\t\t\t\t\t);\n\t\t\t\t\tlet d = reader.skip(wireType);\n\t\t\t\t\tif (u !== false)\n\t\t\t\t\t\t(u === true ? UnknownFieldHandler.onRead : u)(\n\t\t\t\t\t\t\tthis.typeName,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tfieldNo,\n\t\t\t\t\t\t\twireType,\n\t\t\t\t\t\t\td,\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\tinternalBinaryWrite(\n\t\tmessage: BatchGetTransactionsRequest,\n\t\twriter: IBinaryWriter,\n\t\toptions: BinaryWriteOptions,\n\t): IBinaryWriter {\n\t\t/* repeated string digests = 1; */\n\t\tfor (let i = 0; i < message.digests.length; i++)\n\t\t\twriter.tag(1, WireType.LengthDelimited).string(message.digests[i]);\n\t\t/* optional google.protobuf.FieldMask read_mask = 2; */\n\t\tif (message.readMask)\n\t\t\tFieldMask.internalBinaryWrite(\n\t\t\t\tmessage.readMask,\n\t\t\t\twriter.tag(2, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\tlet u = options.writeUnknownFields;\n\t\tif (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n\t\treturn writer;\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2beta2.BatchGetTransactionsRequest\n */\nexport const BatchGetTransactionsRequest = new BatchGetTransactionsRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass BatchGetTransactionsResponse$Type extends MessageType<BatchGetTransactionsResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2beta2.BatchGetTransactionsResponse', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'transactions',\n\t\t\t\tkind: 'message',\n\t\t\t\trepeat: 2 /*RepeatType.UNPACKED*/,\n\t\t\t\tT: () => GetTransactionResult,\n\t\t\t},\n\t\t]);\n\t}\n\tcreate(value?: PartialMessage<BatchGetTransactionsResponse>): BatchGetTransactionsResponse {\n\t\tconst message = globalThis.Object.create(this.messagePrototype!);\n\t\tmessage.transactions = [];\n\t\tif (value !== undefined)\n\t\t\treflectionMergePartial<BatchGetTransactionsResponse>(this, message, value);\n\t\treturn message;\n\t}\n\tinternalBinaryRead(\n\t\treader: IBinaryReader,\n\t\tlength: number,\n\t\toptions: BinaryReadOptions,\n\t\ttarget?: BatchGetTransactionsResponse,\n\t): BatchGetTransactionsResponse {\n\t\tlet message = target ?? this.create(),\n\t\t\tend = reader.pos + length;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tcase /* repeated sui.rpc.v2beta2.GetTransactionResult transactions */ 1:\n\t\t\t\t\tmessage.transactions.push(\n\t\t\t\t\t\tGetTransactionResult.internalBinaryRead(reader, reader.uint32(), options),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet u = options.readUnknownField;\n\t\t\t\t\tif (u === 'throw')\n\t\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t\t`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,\n\t\t\t\t\t\t);\n\t\t\t\t\tlet d = reader.skip(wireType);\n\t\t\t\t\tif (u !== false)\n\t\t\t\t\t\t(u === true ? UnknownFieldHandler.onRead : u)(\n\t\t\t\t\t\t\tthis.typeName,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tfieldNo,\n\t\t\t\t\t\t\twireType,\n\t\t\t\t\t\t\td,\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\tinternalBinaryWrite(\n\t\tmessage: BatchGetTransactionsResponse,\n\t\twriter: IBinaryWriter,\n\t\toptions: BinaryWriteOptions,\n\t): IBinaryWriter {\n\t\t/* repeated sui.rpc.v2beta2.GetTransactionResult transactions = 1; */\n\t\tfor (let i = 0; i < message.transactions.length; i++)\n\t\t\tGetTransactionResult.internalBinaryWrite(\n\t\t\t\tmessage.transactions[i],\n\t\t\t\twriter.tag(1, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\tlet u = options.writeUnknownFields;\n\t\tif (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n\t\treturn writer;\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2beta2.BatchGetTransactionsResponse\n */\nexport const BatchGetTransactionsResponse = new BatchGetTransactionsResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetTransactionResult$Type extends MessageType<GetTransactionResult> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2beta2.GetTransactionResult', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'transaction',\n\t\t\t\tkind: 'message',\n\t\t\t\toneof: 'result',\n\t\t\t\tT: () => ExecutedTransaction,\n\t\t\t},\n\t\t\t{ no: 2, name: 'error', kind: 'message', oneof: 'result', T: () => Status },\n\t\t]);\n\t}\n\tcreate(value?: PartialMessage<GetTransactionResult>): GetTransactionResult {\n\t\tconst message = globalThis.Object.create(this.messagePrototype!);\n\t\tmessage.result = { oneofKind: undefined };\n\t\tif (value !== undefined) reflectionMergePartial<GetTransactionResult>(this, message, value);\n\t\treturn message;\n\t}\n\tinternalBinaryRead(\n\t\treader: IBinaryReader,\n\t\tlength: number,\n\t\toptions: BinaryReadOptions,\n\t\ttarget?: GetTransactionResult,\n\t): GetTransactionResult {\n\t\tlet message = target ?? this.create(),\n\t\t\tend = reader.pos + length;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tcase /* sui.rpc.v2beta2.ExecutedTransaction transaction */ 1:\n\t\t\t\t\tmessage.result = {\n\t\t\t\t\t\toneofKind: 'transaction',\n\t\t\t\t\t\ttransaction: ExecutedTransaction.internalBinaryRead(\n\t\t\t\t\t\t\treader,\n\t\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t(message.result as any).transaction,\n\t\t\t\t\t\t),\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* google.rpc.Status error */ 2:\n\t\t\t\t\tmessage.result = {\n\t\t\t\t\t\toneofKind: 'error',\n\t\t\t\t\t\terror: Status.internalBinaryRead(\n\t\t\t\t\t\t\treader,\n\t\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t(message.result as any).error,\n\t\t\t\t\t\t),\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet u = options.readUnknownField;\n\t\t\t\t\tif (u === 'throw')\n\t\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t\t`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,\n\t\t\t\t\t\t);\n\t\t\t\t\tlet d = reader.skip(wireType);\n\t\t\t\t\tif (u !== false)\n\t\t\t\t\t\t(u === true ? UnknownFieldHandler.onRead : u)(\n\t\t\t\t\t\t\tthis.typeName,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tfieldNo,\n\t\t\t\t\t\t\twireType,\n\t\t\t\t\t\t\td,\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\tinternalBinaryWrite(\n\t\tmessage: GetTransactionResult,\n\t\twriter: IBinaryWriter,\n\t\toptions: BinaryWriteOptions,\n\t): IBinaryWriter {\n\t\t/* sui.rpc.v2beta2.ExecutedTransaction transaction = 1; */\n\t\tif (message.result.oneofKind === 'transaction')\n\t\t\tExecutedTransaction.internalBinaryWrite(\n\t\t\t\tmessage.result.transaction,\n\t\t\t\twriter.tag(1, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\t/* google.rpc.Status error = 2; */\n\t\tif (message.result.oneofKind === 'error')\n\t\t\tStatus.internalBinaryWrite(\n\t\t\t\tmessage.result.error,\n\t\t\t\twriter.tag(2, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\tlet u = options.writeUnknownFields;\n\t\tif (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n\t\treturn writer;\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2beta2.GetTransactionResult\n */\nexport const GetTransactionResult = new GetTransactionResult$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetCheckpointRequest$Type extends MessageType<GetCheckpointRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2beta2.GetCheckpointRequest', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'sequence_number',\n\t\t\t\tkind: 'scalar',\n\t\t\t\toneof: 'checkpointId',\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 2, name: 'digest', kind: 'scalar', oneof: 'checkpointId', T: 9 /*ScalarType.STRING*/ },\n\t\t\t{ no: 3, name: 'read_mask', kind: 'message', T: () => FieldMask },\n\t\t]);\n\t}\n\tcreate(value?: PartialMessage<GetCheckpointRequest>): GetCheckpointRequest {\n\t\tconst message = globalThis.Object.create(this.messagePrototype!);\n\t\tmessage.checkpointId = { oneofKind: undefined };\n\t\tif (value !== undefined) reflectionMergePartial<GetCheckpointRequest>(this, message, value);\n\t\treturn message;\n\t}\n\tinternalBinaryRead(\n\t\treader: IBinaryReader,\n\t\tlength: number,\n\t\toptions: BinaryReadOptions,\n\t\ttarget?: GetCheckpointRequest,\n\t): GetCheckpointRequest {\n\t\tlet message = target ?? this.create(),\n\t\t\tend = reader.pos + length;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tcase /* uint64 sequence_number */ 1:\n\t\t\t\t\tmessage.checkpointId = {\n\t\t\t\t\t\toneofKind: 'sequenceNumber',\n\t\t\t\t\t\tsequenceNumber: reader.uint64().toBigInt(),\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* string digest */ 2:\n\t\t\t\t\tmessage.checkpointId = {\n\t\t\t\t\t\toneofKind: 'digest',\n\t\t\t\t\t\tdigest: reader.string(),\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional google.protobuf.FieldMask read_mask */ 3:\n\t\t\t\t\tmessage.readMask = FieldMask.internalBinaryRead(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmessage.readMask,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet u = options.readUnknownField;\n\t\t\t\t\tif (u === 'throw')\n\t\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t\t`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,\n\t\t\t\t\t\t);\n\t\t\t\t\tlet d = reader.skip(wireType);\n\t\t\t\t\tif (u !== false)\n\t\t\t\t\t\t(u === true ? UnknownFieldHandler.onRead : u)(\n\t\t\t\t\t\t\tthis.typeName,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tfieldNo,\n\t\t\t\t\t\t\twireType,\n\t\t\t\t\t\t\td,\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\tinternalBinaryWrite(\n\t\tmessage: GetCheckpointRequest,\n\t\twriter: IBinaryWriter,\n\t\toptions: BinaryWriteOptions,\n\t): IBinaryWriter {\n\t\t/* uint64 sequence_number = 1; */\n\t\tif (message.checkpointId.oneofKind === 'sequenceNumber')\n\t\t\twriter.tag(1, WireType.Varint).uint64(message.checkpointId.sequenceNumber);\n\t\t/* string digest = 2; */\n\t\tif (message.checkpointId.oneofKind === 'digest')\n\t\t\twriter.tag(2, WireType.LengthDelimited).string(message.checkpointId.digest);\n\t\t/* optional google.protobuf.FieldMask read_mask = 3; */\n\t\tif (message.readMask)\n\t\t\tFieldMask.internalBinaryWrite(\n\t\t\t\tmessage.readMask,\n\t\t\t\twriter.tag(3, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\tlet u = options.writeUnknownFields;\n\t\tif (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n\t\treturn writer;\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2beta2.GetCheckpointRequest\n */\nexport const GetCheckpointRequest = new GetCheckpointRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetCheckpointResponse$Type extends MessageType<GetCheckpointResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2beta2.GetCheckpointResponse', [\n\t\t\t{ no: 1, name: 'checkpoint', kind: 'message', T: () => Checkpoint },\n\t\t]);\n\t}\n\tcreate(value?: PartialMessage<GetCheckpointResponse>): GetCheckpointResponse {\n\t\tconst message = globalThis.Object.create(this.messagePrototype!);\n\t\tif (value !== undefined) reflectionMergePartial<GetCheckpointResponse>(this, message, value);\n\t\treturn message;\n\t}\n\tinternalBinaryRead(\n\t\treader: IBinaryReader,\n\t\tlength: number,\n\t\toptions: BinaryReadOptions,\n\t\ttarget?: GetCheckpointResponse,\n\t): GetCheckpointResponse {\n\t\tlet message = target ?? this.create(),\n\t\t\tend = reader.pos + length;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tcase /* optional sui.rpc.v2beta2.Checkpoint checkpoint */ 1:\n\t\t\t\t\tmessage.checkpoint = Checkpoint.internalBinaryRead(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmessage.checkpoint,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet u = options.readUnknownField;\n\t\t\t\t\tif (u === 'throw')\n\t\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t\t`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,\n\t\t\t\t\t\t);\n\t\t\t\t\tlet d = reader.skip(wireType);\n\t\t\t\t\tif (u !== false)\n\t\t\t\t\t\t(u === true ? UnknownFieldHandler.onRead : u)(\n\t\t\t\t\t\t\tthis.typeName,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tfieldNo,\n\t\t\t\t\t\t\twireType,\n\t\t\t\t\t\t\td,\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\tinternalBinaryWrite(\n\t\tmessage: GetCheckpointResponse,\n\t\twriter: IBinaryWriter,\n\t\toptions: BinaryWriteOptions,\n\t): IBinaryWriter {\n\t\t/* optional sui.rpc.v2beta2.Checkpoint checkpoint = 1; */\n\t\tif (message.checkpoint)\n\t\t\tCheckpoint.internalBinaryWrite(\n\t\t\t\tmessage.checkpoint,\n\t\t\t\twriter.tag(1, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\tlet u = options.writeUnknownFields;\n\t\tif (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n\t\treturn writer;\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2beta2.GetCheckpointResponse\n */\nexport const GetCheckpointResponse = new GetCheckpointResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetEpochRequest$Type extends MessageType<GetEpochRequest> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2beta2.GetEpochRequest', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'epoch',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{ no: 2, name: 'read_mask', kind: 'message', T: () => FieldMask },\n\t\t]);\n\t}\n\tcreate(value?: PartialMessage<GetEpochRequest>): GetEpochRequest {\n\t\tconst message = globalThis.Object.create(this.messagePrototype!);\n\t\tif (value !== undefined) reflectionMergePartial<GetEpochRequest>(this, message, value);\n\t\treturn message;\n\t}\n\tinternalBinaryRead(\n\t\treader: IBinaryReader,\n\t\tlength: number,\n\t\toptions: BinaryReadOptions,\n\t\ttarget?: GetEpochRequest,\n\t): GetEpochRequest {\n\t\tlet message = target ?? this.create(),\n\t\t\tend = reader.pos + length;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tcase /* optional uint64 epoch */ 1:\n\t\t\t\t\tmessage.epoch = reader.uint64().toBigInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* optional google.protobuf.FieldMask read_mask */ 2:\n\t\t\t\t\tmessage.readMask = FieldMask.internalBinaryRead(\n\t\t\t\t\t\treader,\n\t\t\t\t\t\treader.uint32(),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmessage.readMask,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet u = options.readUnknownField;\n\t\t\t\t\tif (u === 'throw')\n\t\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t\t`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,\n\t\t\t\t\t\t);\n\t\t\t\t\tlet d = reader.skip(wireType);\n\t\t\t\t\tif (u !== false)\n\t\t\t\t\t\t(u === true ? UnknownFieldHandler.onRead : u)(\n\t\t\t\t\t\t\tthis.typeName,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tfieldNo,\n\t\t\t\t\t\t\twireType,\n\t\t\t\t\t\t\td,\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\tinternalBinaryWrite(\n\t\tmessage: GetEpochRequest,\n\t\twriter: IBinaryWriter,\n\t\toptions: BinaryWriteOptions,\n\t): IBinaryWriter {\n\t\t/* optional uint64 epoch = 1; */\n\t\tif (message.epoch !== undefined) writer.tag(1, WireType.Varint).uint64(message.epoch);\n\t\t/* optional google.protobuf.FieldMask read_mask = 2; */\n\t\tif (message.readMask)\n\t\t\tFieldMask.internalBinaryWrite(\n\t\t\t\tmessage.readMask,\n\t\t\t\twriter.tag(2, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\tlet u = options.writeUnknownFields;\n\t\tif (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n\t\treturn writer;\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2beta2.GetEpochRequest\n */\nexport const GetEpochRequest = new GetEpochRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetEpochResponse$Type extends MessageType<GetEpochResponse> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2beta2.GetEpochResponse', [\n\t\t\t{ no: 1, name: 'epoch', kind: 'message', T: () => Epoch },\n\t\t]);\n\t}\n\tcreate(value?: PartialMessage<GetEpochResponse>): GetEpochResponse {\n\t\tconst message = globalThis.Object.create(this.messagePrototype!);\n\t\tif (value !== undefined) reflectionMergePartial<GetEpochResponse>(this, message, value);\n\t\treturn message;\n\t}\n\tinternalBinaryRead(\n\t\treader: IBinaryReader,\n\t\tlength: number,\n\t\toptions: BinaryReadOptions,\n\t\ttarget?: GetEpochResponse,\n\t): GetEpochResponse {\n\t\tlet message = target ?? this.create(),\n\t\t\tend = reader.pos + length;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tcase /* optional sui.rpc.v2beta2.Epoch epoch */ 1:\n\t\t\t\t\tmessage.epoch = Epoch.internalBinaryRead(reader, reader.uint32(), options, message.epoch);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet u = options.readUnknownField;\n\t\t\t\t\tif (u === 'throw')\n\t\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t\t`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,\n\t\t\t\t\t\t);\n\t\t\t\t\tlet d = reader.skip(wireType);\n\t\t\t\t\tif (u !== false)\n\t\t\t\t\t\t(u === true ? UnknownFieldHandler.onRead : u)(\n\t\t\t\t\t\t\tthis.typeName,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tfieldNo,\n\t\t\t\t\t\t\twireType,\n\t\t\t\t\t\t\td,\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\tinternalBinaryWrite(\n\t\tmessage: GetEpochResponse,\n\t\twriter: IBinaryWriter,\n\t\toptions: BinaryWriteOptions,\n\t): IBinaryWriter {\n\t\t/* optional sui.rpc.v2beta2.Epoch epoch = 1; */\n\t\tif (message.epoch)\n\t\t\tEpoch.internalBinaryWrite(\n\t\t\t\tmessage.epoch,\n\t\t\t\twriter.tag(1, WireType.LengthDelimited).fork(),\n\t\t\t\toptions,\n\t\t\t).join();\n\t\tlet u = options.writeUnknownFields;\n\t\tif (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n\t\treturn writer;\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2beta2.GetEpochResponse\n */\nexport const GetEpochResponse = new GetEpochResponse$Type();\n/**\n * @generated ServiceType for protobuf service sui.rpc.v2beta2.LedgerService\n */\nexport const LedgerService = new ServiceType('sui.rpc.v2beta2.LedgerService', [\n\t{ name: 'GetServiceInfo', options: {}, I: GetServiceInfoRequest, O: GetServiceInfoResponse },\n\t{ name: 'GetObject', options: {}, I: GetObjectRequest, O: GetObjectResponse },\n\t{ name: 'BatchGetObjects', options: {}, I: BatchGetObjectsRequest, O: BatchGetObjectsResponse },\n\t{ name: 'GetTransaction', options: {}, I: GetTransactionRequest, O: GetTransactionResponse },\n\t{\n\t\tname: 'BatchGetTransactions',\n\t\toptions: {},\n\t\tI: BatchGetTransactionsRequest,\n\t\tO: BatchGetTransactionsResponse,\n\t},\n\t{ name: 'GetCheckpoint', options: {}, I: GetCheckpointRequest, O: GetCheckpointResponse },\n\t{ name: 'GetEpoch', options: {}, I: GetEpochRequest, O: GetEpochResponse },\n]);\n"],
  "mappings": "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",
  "names": ["import_runtime"]
}
