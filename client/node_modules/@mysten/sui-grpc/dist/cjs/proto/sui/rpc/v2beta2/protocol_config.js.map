{
  "version": 3,
  "sources": ["../../../../../../src/proto/sui/rpc/v2beta2/protocol_config.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\nimport type { BinaryWriteOptions } from '@protobuf-ts/runtime';\nimport type { IBinaryWriter } from '@protobuf-ts/runtime';\nimport { WireType } from '@protobuf-ts/runtime';\nimport type { BinaryReadOptions } from '@protobuf-ts/runtime';\nimport type { IBinaryReader } from '@protobuf-ts/runtime';\nimport { UnknownFieldHandler } from '@protobuf-ts/runtime';\nimport type { PartialMessage } from '@protobuf-ts/runtime';\nimport { reflectionMergePartial } from '@protobuf-ts/runtime';\nimport { MessageType } from '@protobuf-ts/runtime';\n/**\n * @generated from protobuf message sui.rpc.v2beta2.ProtocolConfig\n */\nexport interface ProtocolConfig {\n\t/**\n\t * @generated from protobuf field: optional uint64 protocol_version = 1\n\t */\n\tprotocolVersion?: bigint;\n\t/**\n\t * @generated from protobuf field: map<string, bool> feature_flags = 2\n\t */\n\tfeatureFlags: {\n\t\t[key: string]: boolean;\n\t};\n\t/**\n\t * @generated from protobuf field: map<string, string> attributes = 3\n\t */\n\tattributes: {\n\t\t[key: string]: string;\n\t};\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass ProtocolConfig$Type extends MessageType<ProtocolConfig> {\n\tconstructor() {\n\t\tsuper('sui.rpc.v2beta2.ProtocolConfig', [\n\t\t\t{\n\t\t\t\tno: 1,\n\t\t\t\tname: 'protocol_version',\n\t\t\t\tkind: 'scalar',\n\t\t\t\topt: true,\n\t\t\t\tT: 4 /*ScalarType.UINT64*/,\n\t\t\t\tL: 0 /*LongType.BIGINT*/,\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 2,\n\t\t\t\tname: 'feature_flags',\n\t\t\t\tkind: 'map',\n\t\t\t\tK: 9 /*ScalarType.STRING*/,\n\t\t\t\tV: { kind: 'scalar', T: 8 /*ScalarType.BOOL*/ },\n\t\t\t},\n\t\t\t{\n\t\t\t\tno: 3,\n\t\t\t\tname: 'attributes',\n\t\t\t\tkind: 'map',\n\t\t\t\tK: 9 /*ScalarType.STRING*/,\n\t\t\t\tV: { kind: 'scalar', T: 9 /*ScalarType.STRING*/ },\n\t\t\t},\n\t\t]);\n\t}\n\tcreate(value?: PartialMessage<ProtocolConfig>): ProtocolConfig {\n\t\tconst message = globalThis.Object.create(this.messagePrototype!);\n\t\tmessage.featureFlags = {};\n\t\tmessage.attributes = {};\n\t\tif (value !== undefined) reflectionMergePartial<ProtocolConfig>(this, message, value);\n\t\treturn message;\n\t}\n\tinternalBinaryRead(\n\t\treader: IBinaryReader,\n\t\tlength: number,\n\t\toptions: BinaryReadOptions,\n\t\ttarget?: ProtocolConfig,\n\t): ProtocolConfig {\n\t\tlet message = target ?? this.create(),\n\t\t\tend = reader.pos + length;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tcase /* optional uint64 protocol_version */ 1:\n\t\t\t\t\tmessage.protocolVersion = reader.uint64().toBigInt();\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* map<string, bool> feature_flags */ 2:\n\t\t\t\t\tthis.binaryReadMap2(message.featureFlags, reader, options);\n\t\t\t\t\tbreak;\n\t\t\t\tcase /* map<string, string> attributes */ 3:\n\t\t\t\t\tthis.binaryReadMap3(message.attributes, reader, options);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet u = options.readUnknownField;\n\t\t\t\t\tif (u === 'throw')\n\t\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t\t`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,\n\t\t\t\t\t\t);\n\t\t\t\t\tlet d = reader.skip(wireType);\n\t\t\t\t\tif (u !== false)\n\t\t\t\t\t\t(u === true ? UnknownFieldHandler.onRead : u)(\n\t\t\t\t\t\t\tthis.typeName,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tfieldNo,\n\t\t\t\t\t\t\twireType,\n\t\t\t\t\t\t\td,\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\tprivate binaryReadMap2(\n\t\tmap: ProtocolConfig['featureFlags'],\n\t\treader: IBinaryReader,\n\t\toptions: BinaryReadOptions,\n\t): void {\n\t\tlet len = reader.uint32(),\n\t\t\tend = reader.pos + len,\n\t\t\tkey: keyof ProtocolConfig['featureFlags'] | undefined,\n\t\t\tval: ProtocolConfig['featureFlags'][any] | undefined;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tcase 1:\n\t\t\t\t\tkey = reader.string();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tval = reader.bool();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t'unknown map entry field for sui.rpc.v2beta2.ProtocolConfig.feature_flags',\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tmap[key ?? ''] = val ?? false;\n\t}\n\tprivate binaryReadMap3(\n\t\tmap: ProtocolConfig['attributes'],\n\t\treader: IBinaryReader,\n\t\toptions: BinaryReadOptions,\n\t): void {\n\t\tlet len = reader.uint32(),\n\t\t\tend = reader.pos + len,\n\t\t\tkey: keyof ProtocolConfig['attributes'] | undefined,\n\t\t\tval: ProtocolConfig['attributes'][any] | undefined;\n\t\twhile (reader.pos < end) {\n\t\t\tlet [fieldNo, wireType] = reader.tag();\n\t\t\tswitch (fieldNo) {\n\t\t\t\tcase 1:\n\t\t\t\t\tkey = reader.string();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tval = reader.string();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new globalThis.Error(\n\t\t\t\t\t\t'unknown map entry field for sui.rpc.v2beta2.ProtocolConfig.attributes',\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tmap[key ?? ''] = val ?? '';\n\t}\n\tinternalBinaryWrite(\n\t\tmessage: ProtocolConfig,\n\t\twriter: IBinaryWriter,\n\t\toptions: BinaryWriteOptions,\n\t): IBinaryWriter {\n\t\t/* optional uint64 protocol_version = 1; */\n\t\tif (message.protocolVersion !== undefined)\n\t\t\twriter.tag(1, WireType.Varint).uint64(message.protocolVersion);\n\t\t/* map<string, bool> feature_flags = 2; */\n\t\tfor (let k of globalThis.Object.keys(message.featureFlags))\n\t\t\twriter\n\t\t\t\t.tag(2, WireType.LengthDelimited)\n\t\t\t\t.fork()\n\t\t\t\t.tag(1, WireType.LengthDelimited)\n\t\t\t\t.string(k)\n\t\t\t\t.tag(2, WireType.Varint)\n\t\t\t\t.bool(message.featureFlags[k])\n\t\t\t\t.join();\n\t\t/* map<string, string> attributes = 3; */\n\t\tfor (let k of globalThis.Object.keys(message.attributes))\n\t\t\twriter\n\t\t\t\t.tag(3, WireType.LengthDelimited)\n\t\t\t\t.fork()\n\t\t\t\t.tag(1, WireType.LengthDelimited)\n\t\t\t\t.string(k)\n\t\t\t\t.tag(2, WireType.LengthDelimited)\n\t\t\t\t.string(message.attributes[k])\n\t\t\t\t.join();\n\t\tlet u = options.writeUnknownFields;\n\t\tif (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);\n\t\treturn writer;\n\t}\n}\n/**\n * @generated MessageType for protobuf message sui.rpc.v2beta2.ProtocolConfig\n */\nexport const ProtocolConfig = new ProtocolConfig$Type();\n"],
  "mappings": "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",
  "names": ["import_runtime"]
}
